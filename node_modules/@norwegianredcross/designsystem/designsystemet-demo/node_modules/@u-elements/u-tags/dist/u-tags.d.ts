declare const UHTMLElement: {
    new (): HTMLElement;
    prototype: HTMLElement;
};

declare global {
    interface HTMLElementTagNameMap {
        "u-tags": UHTMLTagsElement;
    }
    interface GlobalEventHandlersEventMap {
        tags: CustomEvent<{
            action: "add" | "remove";
            item: HTMLDataElement;
        }>;
    }
}
/**
 * The `<u-tags>` HTML element contains a set of `<data>` elements.
 * No MDN reference available.
 */
declare class UHTMLTagsElement extends UHTMLElement {
    _blurAnnounceReset: boolean;
    _blurTimer: ReturnType<typeof setTimeout> | number;
    _focusIndex: number | null;
    _root: null | Document | ShadowRoot;
    _texts: {
        added: string;
        remove: string;
        removed: string;
        empty: string;
        found: string;
        of: string;
    };
    static get observedAttributes(): string[];
    constructor();
    connectedCallback(): void;
    attributeChangedCallback(prop: string, _prev: string, next: string): void;
    disconnectedCallback(): void;
    handleEvent(event: Event): void;
    get items(): NodeListOf<HTMLDataElement>;
    get control(): HTMLInputElement | null;
}

export { UHTMLTagsElement };

import type * as PreactTypes from 'preact'
import type * as ReactTypes from 'react'
import type * as SvelteTypes from 'svelte/elements'
import type * as VueJSX from '@vue/runtime-dom'
import type { JSX as QwikJSX } from '@builder.io/qwik/jsx-runtime'
import type { JSX as SolidJSX } from 'solid-js'


export type PreactUtags = PreactTypes.JSX.HTMLAttributes<UHTMLTagsElement> & { ontags?: (event: CustomEvent) => void }
export type ReactUtags = ReactTypes.DetailedHTMLProps<ReactTypes.HTMLAttributes<UHTMLTagsElement>, UHTMLTagsElement> & { class?: string }
export type QwikUtags = QwikJSX.IntrinsicElements['div']
export type VueUtags = VueJSX.HTMLAttributes
export type SvelteUtags = SvelteTypes.HTMLAttributes<UHTMLTagsElement> & { 'on:tags'?: (event: CustomEvent) => void, ontags?: (event: CustomEvent) => void }
export type SolidUtags = SolidJSX.HTMLAttributes<UHTMLTagsElement>

// Augmenting @vue/runtime-dom instead of vue directly to avoid interfering with React JSX
declare global { namespace React.JSX { interface IntrinsicElements { 'u-tags': ReactUtags } } }
declare global { namespace preact.JSX { interface IntrinsicElements { 'u-tags': PreactUtags } } }
declare module '@builder.io/qwik/jsx-runtime' { export namespace JSX { export interface IntrinsicElements { 'u-tags': QwikUtags } } }
declare module '@vue/runtime-dom' { export interface GlobalComponents { 'u-tags': VueUtags } }
declare module 'svelte/elements' { interface SvelteHTMLElements { 'u-tags': SvelteUtags } }
declare module 'solid-js' {
  namespace JSX {
    interface IntrinsicElements { 'u-tags': SolidUtags }
    interface CustomEvents { tags: (event: CustomEvent) => void }
  }
}
