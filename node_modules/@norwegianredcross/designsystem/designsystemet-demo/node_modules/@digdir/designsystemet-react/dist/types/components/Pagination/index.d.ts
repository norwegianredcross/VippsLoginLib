import { PaginationButton } from './PaginationButton';
import { PaginationItem } from './PaginationItem';
import { PaginationList } from './PaginationList';
/**
 * Pagination component, used to navigate through a list of items.
 *
 * @example
 * <Pagination>
 *   <Pagination.List>
 *     <Pagination.Item>
 *       <Pagination.Button aria-label='Forrige side'>Forrige</Pagination.Button>
 *     </Pagination.Item>
 *     <Pagination.Item>
 *       <Pagination.Button aria-label='Side 1'>1</Pagination.Button>
 *     </Pagination.Item>
 *     <Pagination.Item>
 *       <Pagination.Button aria-label='Side 2'>2</Pagination.Button>
 *     </Pagination.Item>
 *   </Pagination.List>
 * </Pagination>
 */
declare const Pagination: React.ForwardRefExoticComponent<Omit<import("../../types").DefaultProps & React.HTMLAttributes<HTMLElement>, "aria-label" | "asChild"> & {
    'aria-label'?: string;
    asChild?: boolean;
} & React.RefAttributes<HTMLElement>> & {
    List: React.ForwardRefExoticComponent<{
        asChild?: boolean;
    } & Omit<React.HTMLAttributes<HTMLUListElement>, "size"> & React.RefAttributes<HTMLUListElement>>;
    Item: React.ForwardRefExoticComponent<{
        asChild?: boolean;
    } & Omit<React.HTMLAttributes<HTMLLIElement>, "size"> & React.RefAttributes<HTMLLIElement>>;
    Button: React.ForwardRefExoticComponent<{
        'aria-current'?: React.AriaAttributes["aria-current"];
    } & Omit<import("..").ButtonProps, "icon" | "loading"> & React.RefAttributes<HTMLButtonElement>>;
};
export type { PaginationProps } from './Pagination';
export type { PaginationButtonProps } from './PaginationButton';
export type { PaginationListProps } from './PaginationList';
export type { PaginationItemProps } from './PaginationItem';
export { Pagination, PaginationList, PaginationItem, PaginationButton };
//# sourceMappingURL=index.d.ts.map