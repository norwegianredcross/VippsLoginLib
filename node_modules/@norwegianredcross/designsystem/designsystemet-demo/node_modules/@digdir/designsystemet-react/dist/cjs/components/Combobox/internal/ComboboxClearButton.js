'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var akselIcons = require('@navikt/aksel-icons');
var cl = require('clsx/lite');
var react = require('react');
var ComboboxContext = require('../ComboboxContext.js');

const ComboboxClearButton = react.forwardRef((props, ref) => {
    const context = react.useContext(ComboboxContext.ComboboxContext);
    if (!context) {
        throw new Error('ComboboxContext is missing');
    }
    const { readOnly, disabled, clearButtonLabel, handleSelectOption } = context;
    return (jsxRuntime.jsx("button", { ...props, ref: ref, disabled: disabled, className: cl('ds-combobox__clear-button', `ds-focus`), onClick: () => {
            if (readOnly)
                return;
            if (disabled)
                return;
            handleSelectOption({ option: null, clear: true });
        }, onKeyDown: (e) => {
            if (readOnly)
                return;
            if (disabled)
                return;
            if (e.key === 'Enter') {
                e.stopPropagation();
                handleSelectOption({ option: null, clear: true });
            }
        }, type: 'button', "aria-label": clearButtonLabel, children: jsxRuntime.jsx(akselIcons.XMarkIcon, { fontSize: '1.5em', title: 'Clear selection' }) }));
});
ComboboxClearButton.displayName = 'ComboboxClearButton';

module.exports = ComboboxClearButton;
