import type { ButtonHTMLAttributes, ReactElement, ReactNode } from 'react';
export type ComboboxOptionProps = {
    /**
     * The value returned when the option is selected
     */
    value: string;
    /**
     * The index of the option in the list, will be overwritten by Combobox.
     */
    description?: string;
    /**
     * The text displayed in the input or in the chips when the option is selected.
     * Required if children is not composed of strings only.
     */
    displayValue?: string;
} & ButtonHTMLAttributes<HTMLButtonElement>;
declare const ComboboxOption: React.NamedExoticComponent<{
    /**
     * The value returned when the option is selected
     */
    value: string;
    /**
     * The index of the option in the list, will be overwritten by Combobox.
     */
    description?: string;
    /**
     * The text displayed in the input or in the chips when the option is selected.
     * Required if children is not composed of strings only.
     */
    displayValue?: string;
} & ButtonHTMLAttributes<HTMLButtonElement> & React.RefAttributes<HTMLButtonElement>>;
export { ComboboxOption };
export declare function isComboboxOption(child: ReactNode): child is ReactElement<ComboboxOptionProps>;
//# sourceMappingURL=Option.d.ts.map