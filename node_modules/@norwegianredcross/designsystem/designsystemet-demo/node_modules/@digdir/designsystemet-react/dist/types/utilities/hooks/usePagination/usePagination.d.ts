import type { MouseEvent } from 'react';
import type { PaginationButtonProps } from '../../../components';
export type UsePaginationProps = {
    /**
     * The current page number
     * @default 1
     */
    currentPage: number;
    /**
     * The total number of pages
     * @default 1
     */
    totalPages: number;
    /**
     * The maximum number of pages to show
     * @default 7
     */
    showPages?: number;
    /**
     * Callback to set the current page
     */
    setCurrentPage?: (page: number) => void;
    /**
     * Callback when the page changes
     */
    onChange?: (event: MouseEvent<HTMLElement>, page: number) => void;
};
/**
 * Hook to help manage pagination state
 *
 * @example
 * const { pages, nextButtonProps, prevButtonProps } = usePagination({
 *   currentPage: page,
 *   totalPages: 10,
 *   showPages: 7,
 *   setCurrentPage,
 * })
 *
 * <Pagination>
 *   <Pagination.Item>
 *     <Pagination.Button {...prevButtonProps}>Forrige</Pagination.Button>
 *   </Pagination.Item>
 *   {pages.map(({ page, itemKey, buttonProps }) => (
 *     <Pagination.Item key={itemKey}>
 *       {typeof page === 'number' && (
 *         <Pagination.Button {...buttonProps} aria-label={`Side ${page}`}>
 *           {page}
 *         </Pagination.Button>
 *       )}
 *     </Pagination.Item>
 *   ))}
 *   <Pagination.Item>
 *     <Pagination.Button {...nextButtonProps}>Neste</Pagination.Button>
 *   </Pagination.Item>
 * </Pagination>
 **/
export declare const usePagination: ({ currentPage, setCurrentPage, onChange, totalPages, showPages, }: UsePaginationProps) => {
    /** Number of steps */
    pages: {
        /**
         * Page number or "ellipsis" for the ellipsis item
         */
        page: string | number;
        /**
         * Unique key for the item
         */
        itemKey: string;
        /**
         * Properties to spread on Pagination.Button
         */
        buttonProps: PaginationButtonProps | null;
    }[];
    /** Properties to spread on Pagination.Button used for previous naviagation */
    prevButtonProps: PaginationButtonProps;
    /** Properties to spread on Pagination.Button used for next naviagation */
    nextButtonProps: PaginationButtonProps;
    /** Indication if previous page action should be shown or not */
    hasPrev: boolean;
    /** Indication if next page action should be shown or not */
    hasNext: boolean;
};
//# sourceMappingURL=usePagination.d.ts.map