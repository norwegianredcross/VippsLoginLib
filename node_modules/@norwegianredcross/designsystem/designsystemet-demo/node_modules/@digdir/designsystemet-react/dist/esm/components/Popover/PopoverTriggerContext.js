'use client';
import { jsx } from 'react/jsx-runtime';
import { useId, useState, createContext } from 'react';

/**
 * PopoverTriggerContext component, use to wrap a Popover.Trigger and Popover.
 *
 * @example
 * <Popover.TriggerContext>
 *   <Popover.Trigger>Open Popover</Popover.Trigger>
 *   <Popover>
 *     Content
 *   </Popover>
 * </Popover.TriggerContext>
 */
const PopoverTriggerContext = ({ children, }) => {
    const randomPopoverId = useId();
    const [popoverId, setPopoverId] = useState(randomPopoverId);
    return (jsx(Context.Provider, { value: { popoverId, setPopoverId }, children: children }));
};
PopoverTriggerContext.displayName = 'PopoverTriggerContext';
const Context = createContext({});

export { Context, PopoverTriggerContext };
