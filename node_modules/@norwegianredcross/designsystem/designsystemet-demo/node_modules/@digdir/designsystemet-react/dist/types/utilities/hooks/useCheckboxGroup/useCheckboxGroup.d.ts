import type { ReactNode } from 'react';
import type { CheckboxProps } from '../../../components';
export type UseCheckboxGroupProps = {
    /**
     * Disables all checkboxes in the group.
     */
    disabled?: boolean;
    /**
     * Error message for the group.
     * If set, all checkboxes will have `aria-invalid` set to `true`.
     */
    error?: ReactNode;
    /**
     * Name of the group.
     * If not set, a random id will be generated.
     */
    name?: string;
    /**
     * Makes all checkboxes in the group read-only.
     * If set, all checkboxes will have `aria-readonly` set to `true`.
     */
    readOnly?: boolean;
    /**
     * Initial value of the group
     * @default []
     */
    value?: string[];
    /**
     * Makes all checkboxes in the group required.
     * If set, all checkboxes will have `required` set to `true`.
     */
    required?: boolean;
    /**
     * Callback that is called when the value of the group changes.
     * @param nextValue string[]
     * @param currentValue string[]
     * @returns void
     */
    onChange?: (nextValue: string[], currentValue: string[]) => void;
};
/**
 * Get anything that is set on a checkbox, but
 * remove anything that comes from the group itself.
 */
export type GetCheckboxProps = Omit<CheckboxProps, 'prefix' | 'role' | 'type' | 'size' | 'aria-label' | 'aria-labelledby' | 'label' | 'checked' | 'value'> & {
    /** Enables indeterminate handling for this `Checkbox` and `CheckboxGroup` */
    allowIndeterminate?: boolean;
    ref?: React.ForwardedRef<HTMLInputElement>;
    checked?: boolean;
    value?: string;
};
type useCheckboxGroupReturn = {
    value: string[];
    setValue: React.Dispatch<React.SetStateAction<string[]>>;
    getCheckboxProps: (propsOrValue?: string | GetCheckboxProps) => GetCheckboxProps;
    validationMessageProps: {
        children: ReactNode;
        hidden: boolean;
        id: string;
    };
};
export declare function useCheckboxGroup(props?: UseCheckboxGroupProps): useCheckboxGroupReturn;
export {};
//# sourceMappingURL=useCheckboxGroup.d.ts.map