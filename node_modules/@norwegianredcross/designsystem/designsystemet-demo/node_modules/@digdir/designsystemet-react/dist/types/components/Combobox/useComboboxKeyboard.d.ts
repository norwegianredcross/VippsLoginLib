import type { KeyboardEvent } from 'react';
import type { ComboboxContextType } from './ComboboxContext';
import type { useCombobox } from './useCombobox';
type UseComboboxKeyboardProps = {
    filteredOptions: ReturnType<typeof useCombobox>['filteredOptions'];
    selectedOptions: ReturnType<typeof useCombobox>['selectedOptions'];
    interactiveChildren: ReturnType<typeof useCombobox>['interactiveChildren'];
    options: ReturnType<typeof useCombobox>['options'];
    readOnly: boolean;
    disabled: boolean;
    inputValue: string;
    multiple: boolean;
    open: boolean;
    setOpen: (value: boolean) => void;
    setInputValue: (value: string) => void;
    handleSelectOption: ComboboxContextType['handleSelectOption'];
};
export declare const useComboboxKeyboard: ({ readOnly, disabled, interactiveChildren, filteredOptions, inputValue, selectedOptions, multiple, open, options, setOpen, handleSelectOption, }: UseComboboxKeyboardProps) => (...args: KeyboardEvent<Element>[]) => void;
export {};
//# sourceMappingURL=useComboboxKeyboard.d.ts.map