import { SearchButton } from './SearchButton';
import { SearchClear } from './SearchClear';
import { SearchInput } from './SearchInput';
/**
 * Search component, use to display different variations of a search input
 *
 * @example with button
 * <Search>
 *   <Search.Input aria-label='Søk' />
 *   <Search.Clear />
 *   <Search.Button />
 * </Search>
 *
 * @example with icon
 * <Search>
 *   <Search.Input aria-label='Søk' />
 *   <Search.Clear />
 * </Search>
 */
declare const Search: React.ForwardRefExoticComponent<import("../../types").DefaultProps & React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement>> & {
    Clear: React.ForwardRefExoticComponent<Omit<import("..").ButtonProps, "children" | "variant"> & {
        'aria-label'?: string;
    } & React.RefAttributes<HTMLButtonElement>>;
    Button: React.ForwardRefExoticComponent<Omit<import("../../types").DefaultProps & React.ButtonHTMLAttributes<HTMLButtonElement>, "type" | "data-color" | "variant" | "icon" | "loading" | "asChild"> & {
        variant?: "primary" | "secondary" | "tertiary";
        'data-color'?: import("../../colors").Color | import("../../colors").SeverityDanger;
        icon?: boolean;
        loading?: boolean | React.ReactNode;
        asChild?: boolean;
        type?: React.ButtonHTMLAttributes<HTMLButtonElement>["type"];
    } & React.RefAttributes<HTMLButtonElement>>;
    Input: React.ForwardRefExoticComponent<import("../../types").DefaultProps & Omit<React.InputHTMLAttributes<HTMLInputElement>, "type" | "readOnly"> & React.RefAttributes<HTMLInputElement>>;
};
export type { SearchProps } from './Search';
export type { SearchButtonProps } from './SearchButton';
export type { SearchClearProps } from './SearchClear';
export type { SearchInputProps } from './SearchInput';
export { SearchClear, SearchButton, SearchInput, Search };
//# sourceMappingURL=index.d.ts.map