import { type ButtonProps } from '../Button';
export type SuggestionClearProps = Omit<ButtonProps, 'variant' | 'children'> & {
    /**
     * Aria label for the clear button
     * @default 'Tøm'
     */
    'aria-label'?: string;
};
/**
 * Component that provides a clear button for the suggestion input.
 *
 * Place as a descendant of `Suggestion`
 *
 * @example
 * <Suggestion>
 *   <Suggestion.Input />
 *   <Suggestion.Clear />
 *   <Suggestion.List />
 * </Suggestion>
 */
export declare const SuggestionClear: React.ForwardRefExoticComponent<Omit<ButtonProps, "children" | "variant"> & {
    /**
     * Aria label for the clear button
     * @default 'Tøm'
     */
    'aria-label'?: string;
} & React.RefAttributes<HTMLButtonElement>>;
type ReactInternalHack = {
    _valueTracker?: {
        setValue: (a: string) => void;
    };
};
export declare const setReactInputValue: (input: HTMLInputElement & ReactInternalHack, value: string) => void;
export {};
//# sourceMappingURL=SuggestionClear.d.ts.map