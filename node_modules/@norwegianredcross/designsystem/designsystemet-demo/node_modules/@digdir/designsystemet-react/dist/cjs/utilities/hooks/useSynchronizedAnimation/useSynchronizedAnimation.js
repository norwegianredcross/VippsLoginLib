'use client';
'use strict';

var react = require('react');
var useIsomorphicLayoutEffect = require('../useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.js');

// Inspired by Sam Selikoff
// https://github.com/samselikoff/2022-02-24-use-synchronized-animation/blob/main/src/App.js
/**
 * Synchronizes the css animation of multiple elements with the same `animationName`.
 *
 * @example
 * ```tsx
 *  const ref = useSynchronizedAnimation<HTMLDivElement>('spin');
 *
 *  <div
 *   ref={ref}
 *  />
 * ```
 */
function useSynchronizedAnimation(animationName) {
    const ref = react.useRef(null);
    useIsomorphicLayoutEffect.useIsomorphicLayoutEffect(() => {
        const animations = document
            .getAnimations()
            .filter((animation) => 'animationName' in animation &&
            animation.animationName === animationName);
        const firstOfType = animations.find((animation) => 'animationName' in animation &&
            animation.animationName === animationName);
        const myAnimation = animations.find((animation) => animation.effect?.target === ref.current);
        if (myAnimation && myAnimation === firstOfType) {
            myAnimation.currentTime = 0;
        }
        if (myAnimation &&
            firstOfType?.currentTime &&
            myAnimation !== firstOfType) {
            myAnimation.currentTime = firstOfType.currentTime;
        }
        return () => {
            if (myAnimation && firstOfType?.currentTime) {
                myAnimation.currentTime = firstOfType.currentTime;
            }
        };
    }, [animationName]);
    return ref;
}

exports.useSynchronizedAnimation = useSynchronizedAnimation;
