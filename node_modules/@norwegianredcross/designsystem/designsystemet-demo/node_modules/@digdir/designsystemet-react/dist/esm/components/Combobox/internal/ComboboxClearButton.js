'use client';
import { jsx } from 'react/jsx-runtime';
import { XMarkIcon } from '@navikt/aksel-icons';
import cl from 'clsx/lite';
import { forwardRef, useContext } from 'react';
import { ComboboxContext } from '../ComboboxContext.js';

const ComboboxClearButton = forwardRef((props, ref) => {
    const context = useContext(ComboboxContext);
    if (!context) {
        throw new Error('ComboboxContext is missing');
    }
    const { readOnly, disabled, clearButtonLabel, handleSelectOption } = context;
    return (jsx("button", { ...props, ref: ref, disabled: disabled, className: cl('ds-combobox__clear-button', `ds-focus`), onClick: () => {
            if (readOnly)
                return;
            if (disabled)
                return;
            handleSelectOption({ option: null, clear: true });
        }, onKeyDown: (e) => {
            if (readOnly)
                return;
            if (disabled)
                return;
            if (e.key === 'Enter') {
                e.stopPropagation();
                handleSelectOption({ option: null, clear: true });
            }
        }, type: 'button', "aria-label": clearButtonLabel, children: jsx(XMarkIcon, { fontSize: '1.5em', title: 'Clear selection' }) }));
});
ComboboxClearButton.displayName = 'ComboboxClearButton';

export { ComboboxClearButton as default };
