'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var react$1 = require('@floating-ui/react');
var Tabs = require('./Tabs.js');

/**
 * A single content item in a Tabs component.
 *
 * @example
 * <Tabs.Panel value='1'>content 1</Tabs.Panel>
 */
const TabsPanel = react.forwardRef(function TabsPanel({ children, value, ...rest }, ref) {
    const { value: tabsValue } = react.useContext(Tabs.Context);
    const active = value === tabsValue;
    const [hasTabbableElement, setHasTabbableElement] = react.useState(false);
    const internalRef = react.useRef(null);
    const mergedRef = react$1.useMergeRefs([ref, internalRef]);
    /* Check if the panel has any tabbable elements */
    react.useEffect(() => {
        if (!internalRef.current)
            return;
        const tabbableElements = internalRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
        setHasTabbableElement(tabbableElements.length > 0);
    }, [children]);
    return (jsxRuntime.jsx(jsxRuntime.Fragment, { children: active && (jsxRuntime.jsx("div", { ref: mergedRef, role: 'tabpanel', tabIndex: hasTabbableElement ? undefined : 0, ...rest, children: children })) }));
});

exports.TabsPanel = TabsPanel;
