'use client';
import { jsx } from 'react/jsx-runtime';
import { useMergeRefs } from '@floating-ui/react';
import { Slot } from '@radix-ui/react-slot';
import cl from 'clsx/lite';
import { forwardRef } from 'react';
import { useSynchronizedAnimation } from '../../utilities/hooks/useSynchronizedAnimation/useSynchronizedAnimation.js';

/**
 * Skeleton is used to represent a draft of page while the content loads.
 *
 * @example
 * <Skeleton variant="circle" />
 * <Skeleton variant="text" />
 * <Skeleton variant="rectangle" />
 */
const Skeleton = forwardRef(function Skeleton({ asChild, className, height, style, variant = 'rectangle', width, ...rest }, ref) {
    const Component = asChild ? Slot : 'span';
    const isText = variant === 'text';
    const animationRef = useSynchronizedAnimation('ds-skeleton-opacity-fade');
    const mergedRefs = useMergeRefs([animationRef, ref]);
    return (jsx(Component, { "aria-hidden": 'true', className: cl('ds-skeleton', className), "data-text": isText ? '-'.repeat(Number(width) || 1) : undefined, "data-variant": variant, ref: mergedRefs, style: isText ? style : { width, height, ...style }, ...rest }));
});

export { Skeleton };
