import type { HTMLAttributes } from 'react';
import type { RovingFocusElement } from './RovingFocusRoot';
/** Get the next focusable RovingFocusItem */
export declare function getNextFocusableValue(items: RovingFocusElement[], value: string): RovingFocusElement | undefined;
/** Get the previous focusable RovingFocusItem */
export declare function getPrevFocusableValue(items: RovingFocusElement[], value: string): RovingFocusElement | undefined;
export declare const RovingFocusItem: React.ForwardRefExoticComponent<{
    /** The value of the `RovingFocusItem` used to determine which item should have focus. */
    value?: string;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement>>;
//# sourceMappingURL=RovingFocusItem.d.ts.map