'use client';
import cl from 'clsx/lite';
import { useContext, useId } from 'react';
import { FieldsetContext } from './FieldsetContext.js';

/**
 * Handles props and their state for various form-fields in context with Fieldset
 */
const useFormField = (props, prefix) => {
    const fieldset = useContext(FieldsetContext);
    const randomId = useId();
    const id = props.id ?? `${prefix}-${randomId}`;
    const errorId = props.errorId ?? `${prefix}-error-${randomId}`;
    const descriptionId = `${prefix}-description-${randomId}`;
    const size = props.size ?? fieldset?.size ?? 'md';
    const disabled = fieldset?.disabled || props?.disabled;
    const hasError = !disabled && !!(props.error || fieldset?.error);
    return {
        hasError,
        errorId,
        descriptionId,
        size,
        inputProps: {
            id,
            disabled,
            'aria-invalid': hasError ? true : undefined,
            'aria-describedby': cl(props['aria-describedby'], !!props?.description &&
                typeof props?.description === 'string' &&
                descriptionId, hasError && !fieldset?.error && errorId, hasError && !!fieldset?.error && fieldset?.errorId) || undefined,
        },
    };
};

export { useFormField };
