import type { HTMLAttributes } from 'react';
import type { DefaultProps } from '../../types';
import type { MergeRight } from '../../utilities';
export type PaginationProps = MergeRight<DefaultProps & HTMLAttributes<HTMLElement>, {
    /**
     * Sets the screen reader label for the Pagination area
     * @default Sidenavigering
     */
    'aria-label'?: string;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
}>;
/**
 * Pagination component, used to navigate through a list of items.
 *
 * @example
 * <Pagination>
 *   <Pagination.List>
 *     <Pagination.Item>
 *       <Pagination.Button aria-label='Forrige side'>Forrige</Pagination.Button>
 *     </Pagination.Item>
 *     <Pagination.Item>
 *       <Pagination.Button aria-label='Side 1'>1</Pagination.Button>
 *     </Pagination.Item>
 *     <Pagination.Item>
 *       <Pagination.Button aria-label='Side 2'>2</Pagination.Button>
 *     </Pagination.Item>
 *   </Pagination.List>
 * </Pagination>
 */
export declare const Pagination: React.ForwardRefExoticComponent<Omit<DefaultProps & HTMLAttributes<HTMLElement>, "aria-label" | "asChild"> & {
    /**
     * Sets the screen reader label for the Pagination area
     * @default Sidenavigering
     */
    'aria-label'?: string;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & React.RefAttributes<HTMLElement>>;
//# sourceMappingURL=Pagination.d.ts.map