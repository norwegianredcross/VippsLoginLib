'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var reactSlot = require('@radix-ui/react-slot');
var cl = require('clsx/lite');
var react = require('react');
var Spinner = require('../Spinner/Spinner.js');

/**
 * Button used for interaction
 *
 * @example
 * <Button>Click me</Button>
 */
const Button = react.forwardRef(function Button({ asChild, className, children, icon = false, loading = false, variant = 'primary', ...rest }, ref) {
    const Component = asChild ? reactSlot.Slot : 'button';
    // Fallbacks to undefined to prevent rendering attribute="false"
    return (jsxRuntime.jsxs(Component, { "aria-busy": Boolean(loading) || undefined, "aria-disabled": Boolean(loading) || undefined, className: cl('ds-button', className), "data-icon": icon || undefined, "data-variant": variant, ref: ref, 
        /* don't set type when we use `asChild` */
        type: asChild ? undefined : 'button', ...rest, children: [loading === true ? (jsxRuntime.jsx(Spinner.Spinner, { "aria-hidden": 'true' })) : (loading // Allow custom loading spinner
            ), jsxRuntime.jsx(reactSlot.Slottable, { children: children })] }));
});

exports.Button = Button;
