'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react$1 = require('@floating-ui/react');
var reactSlot = require('@radix-ui/react-slot');
var cl = require('clsx/lite');
var react = require('react');

/**
 * Card component to present content in a structured way.
 *
 * @example
 * <Card>
 *  <Card.Block>Header</Card.Block>
 *  <Card.Block>Content</Card.Block>
 *  <Card.Block>Footer</Card.Block>
 * </Card>
 */
const Card = react.forwardRef(function Card({ asChild = false, variant = 'default', className, ...rest }, ref) {
    const Component = asChild ? reactSlot.Slot : 'div';
    const cardRef = react.useRef(null);
    const mergedRefs = react$1.useMergeRefs([cardRef, ref]);
    // Forward click on card to heading links for better accessibility
    // https://adrianroselli.com/2020/02/block-links-cards-clickable-regions-etc.html
    react.useEffect(() => {
        const card = cardRef.current;
        const handleClick = ({ ctrlKey, metaKey, target }) => {
            const link = card?.querySelector(':is(h1,h2,h3,h4,h5,h6) a');
            if (!link || link?.contains(target))
                return; // Let links handle their own clicks
            if (ctrlKey || metaKey)
                window.open(link.href, '', 'noreferrer');
            else
                link.click(); // Using link.click instead of window.location.href as this will trigger the browser's handling of rel=, target=, etc.
        };
        card?.addEventListener('click', handleClick);
        return () => card?.removeEventListener('click', handleClick);
    }, []);
    return (jsxRuntime.jsx(Component, { className: cl(`ds-card`, className), "data-variant": variant, ref: mergedRefs, ...rest }));
});

exports.Card = Card;
