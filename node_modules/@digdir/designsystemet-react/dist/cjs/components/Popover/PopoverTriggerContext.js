'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');

/**
 * PopoverTriggerContext component, use to wrap a Popover.Trigger and Popover.
 *
 * @example
 * <Popover.TriggerContext>
 *   <Popover.Trigger>Open Popover</Popover.Trigger>
 *   <Popover>
 *     Content
 *   </Popover>
 * </Popover.TriggerContext>
 */
const PopoverTriggerContext = ({ children, }) => {
    const randomPopoverId = react.useId();
    const [popoverId, setPopoverId] = react.useState(randomPopoverId);
    return (jsxRuntime.jsx(Context.Provider, { value: { popoverId, setPopoverId }, children: children }));
};
PopoverTriggerContext.displayName = 'PopoverTriggerContext';
const Context = react.createContext({});

exports.Context = Context;
exports.PopoverTriggerContext = PopoverTriggerContext;
