'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react$1 = require('@floating-ui/react');
var reactSlot = require('@radix-ui/react-slot');
var cl = require('clsx/lite');
var react = require('react');
var useSynchronizedAnimation = require('../../utilities/hooks/useSynchronizedAnimation/useSynchronizedAnimation.js');

/**
 * Skeleton is used to represent a draft of page while the content loads.
 *
 * @example
 * <Skeleton variant="circle" />
 * <Skeleton variant="text" />
 * <Skeleton variant="rectangle" />
 */
const Skeleton = react.forwardRef(function Skeleton({ asChild, className, height, style, variant = 'rectangle', width, ...rest }, ref) {
    const Component = asChild ? reactSlot.Slot : 'span';
    const isText = variant === 'text';
    const animationRef = useSynchronizedAnimation.useSynchronizedAnimation('ds-skeleton-opacity-fade');
    const mergedRefs = react$1.useMergeRefs([animationRef, ref]);
    return (jsxRuntime.jsx(Component, { "aria-hidden": 'true', className: cl('ds-skeleton', className), "data-text": isText ? '-'.repeat(Number(width) || 1) : undefined, "data-variant": variant, ref: mergedRefs, style: isText ? style : { width, height, ...style }, ...rest }));
});

exports.Skeleton = Skeleton;
