'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react$1 = require('@floating-ui/react');
var uDatalist = require('@u-elements/u-datalist');
var react = require('react');
var MultiSuggestion = require('./MultiSuggestion.js');
var Input = require('../Input/Input.js');

/**
 * Component that provides an input field for the MultiSuggestion list.
 *
 * Place as a descendant of `MultiSuggestion`
 *
 * @example
 * <MultiSuggestion>
 *   <MultiSuggestion.Input />
 *   <MultiSuggestion.List />
 * </MultiSuggestion>
 */
const MultiSuggestionInput = react.forwardRef(function MultiSuggestionList({ value, onInput, ...rest }, ref) {
    const { listId, inputRef, handleFilter } = react.useContext(MultiSuggestion.MultiSuggestionContext);
    const mergedRefs = react$1.useMergeRefs([inputRef, ref]);
    // Update also if controlled value
    react.useEffect(() => {
        handleFilter?.(inputRef?.current);
    }, [value]);
    return (jsxRuntime.jsx(Input.Input, { ref: mergedRefs, list: listId, value: value, onInput: (event) => {
            onInput?.(event); // Should run first
            if (!uDatalist.isDatalistClick(event.nativeEvent))
                handleFilter?.(inputRef?.current);
        }, placeholder: '' // We need an empty placeholder for the clear button to be able to show/hide
        , ...rest }));
});

exports.MultiSuggestionInput = MultiSuggestionInput;
