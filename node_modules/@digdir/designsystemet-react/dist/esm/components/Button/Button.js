'use client';
import { jsxs, jsx } from 'react/jsx-runtime';
import { Slot, Slottable } from '@radix-ui/react-slot';
import cl from 'clsx/lite';
import { forwardRef } from 'react';
import { Spinner } from '../Spinner/Spinner.js';

/**
 * Button used for interaction
 *
 * @example
 * <Button>Click me</Button>
 */
const Button = forwardRef(function Button({ asChild, className, children, icon = false, loading = false, variant = 'primary', ...rest }, ref) {
    const Component = asChild ? Slot : 'button';
    // Fallbacks to undefined to prevent rendering attribute="false"
    return (jsxs(Component, { "aria-busy": Boolean(loading) || undefined, "aria-disabled": Boolean(loading) || undefined, className: cl('ds-button', className), "data-icon": icon || undefined, "data-variant": variant, ref: ref, 
        /* don't set type when we use `asChild` */
        type: asChild ? undefined : 'button', ...rest, children: [loading === true ? (jsx(Spinner, { "aria-hidden": 'true' })) : (loading // Allow custom loading spinner
            ), jsx(Slottable, { children: children })] }));
});

export { Button };
