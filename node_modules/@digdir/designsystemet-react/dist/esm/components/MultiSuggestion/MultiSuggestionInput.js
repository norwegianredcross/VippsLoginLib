'use client';
import { jsx } from 'react/jsx-runtime';
import { useMergeRefs } from '@floating-ui/react';
import { isDatalistClick } from '@u-elements/u-datalist';
import { forwardRef, useContext, useEffect } from 'react';
import { MultiSuggestionContext } from './MultiSuggestion.js';
import { Input } from '../Input/Input.js';

/**
 * Component that provides an input field for the MultiSuggestion list.
 *
 * Place as a descendant of `MultiSuggestion`
 *
 * @example
 * <MultiSuggestion>
 *   <MultiSuggestion.Input />
 *   <MultiSuggestion.List />
 * </MultiSuggestion>
 */
const MultiSuggestionInput = forwardRef(function MultiSuggestionList({ value, onInput, ...rest }, ref) {
    const { listId, inputRef, handleFilter } = useContext(MultiSuggestionContext);
    const mergedRefs = useMergeRefs([inputRef, ref]);
    // Update also if controlled value
    useEffect(() => {
        handleFilter?.(inputRef?.current);
    }, [value]);
    return (jsx(Input, { ref: mergedRefs, list: listId, value: value, onInput: (event) => {
            onInput?.(event); // Should run first
            if (!isDatalistClick(event.nativeEvent))
                handleFilter?.(inputRef?.current);
        }, placeholder: '' // We need an empty placeholder for the clear button to be able to show/hide
        , ...rest }));
});

export { MultiSuggestionInput };
