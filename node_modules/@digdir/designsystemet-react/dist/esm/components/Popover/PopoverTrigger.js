'use client';
import { jsx } from 'react/jsx-runtime';
import { Slot } from '@radix-ui/react-slot';
import { forwardRef, useContext, version } from 'react';
import { Button } from '../Button/Button.js';
import { Context } from './PopoverTriggerContext.js';

/**
 * PopoverTrigger component, used to trigger a popover.
 *
 * @example
 * <Popover.TriggerContext>
 *   <Popover.Trigger>Open Popover</Popover.Trigger>
 *   <Popover>
 *     Content
 *   </Popover>
 * </Popover.TriggerContext>
 *
 * @example inline
 * <Popover.TriggerContext>
 *   <Paragraph>
 *    We can use it <Popover.Trigger inline={true}>inline</Popover.Trigger>.
 *   </Paragraph>
 *   <Popover>
 *     Content
 *   </Popover>
 * </Popover.TriggerContext>
 */
const PopoverTrigger = forwardRef(function PopoverTrigger({ id, inline, asChild, ...rest }, ref) {
    const { popoverId } = useContext(Context);
    const Component = asChild ? Slot : inline ? 'button' : Button;
    const popoverProps = Object.assign({
        [version.startsWith('19') ? 'popoverTarget' : 'popovertarget']: popoverId,
        ...(inline
            ? {
                'data-popover': 'inline',
            }
            : {}),
    }, rest);
    return jsx(Component, { ref: ref, ...popoverProps });
});

export { PopoverTrigger };
