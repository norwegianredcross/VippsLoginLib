import type { HTMLAttributes } from 'react';
export type HeadingProps = {
    /**
     * Heading level. This will translate into any h1-6 level unless `asChild` is `true`
     * @default 2
     */
    level?: 1 | 2 | 3 | 4 | 5 | 6;
    /**
     * Changes text sizing
     * @default 'md'
     */
    'data-size'?: '2xs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & HTMLAttributes<HTMLHeadingElement>;
/**
 * Use `Heading` to render h1-6 elements with heading text styles.
 *
 * @example
 * <Heading data-size='lg' level={2}>Heading</Heading>
 */
export declare const Heading: React.ForwardRefExoticComponent<{
    /**
     * Heading level. This will translate into any h1-6 level unless `asChild` is `true`
     * @default 2
     */
    level?: 1 | 2 | 3 | 4 | 5 | 6;
    /**
     * Changes text sizing
     * @default 'md'
     */
    'data-size'?: "2xs" | "xs" | "sm" | "md" | "lg" | "xl" | "2xl";
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & HTMLAttributes<HTMLHeadingElement> & React.RefAttributes<HTMLHeadingElement>>;
//# sourceMappingURL=Heading.d.ts.map