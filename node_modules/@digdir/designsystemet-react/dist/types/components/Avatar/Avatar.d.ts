import type { HTMLAttributes, ReactNode } from 'react';
import type { DefaultProps, Size } from '../../types';
import type { MergeRight } from '../../utilities';
export type AvatarProps = MergeRight<DefaultProps & HTMLAttributes<HTMLSpanElement>, {
    /**
     * The name of the person the avatar represents.
     */
    'aria-label': string;
    /**
     * The size of the avatar.
     */
    'data-size'?: 'xs' | Size;
    /**
     * The shape of the avatar.
     *
     * @default 'circle'
     */
    variant?: 'circle' | 'square';
    /**
     * Initials to display inside the avatar.
     */
    initials?: string;
    /**
     * Image, icon or initials to display inside the avatar.
     *
     * Gets `aria-hidden="true"`
     */
    children?: ReactNode;
}>;
/**
 * Avatars are used to represent people or entities.
 *
 * @example
 * <Avatar aria-label="John Doe" initials="JD" />
 *
 * @example
 * <Avatar aria-label="John Doe">
 *  <img src='â€¦' alt='John Doe' />
 * </Avatar>
 *
 * @example
 * <Avatar aria-label="John Doe">
 *  <Icon />
 * </Avatar>
 */
export declare const Avatar: React.ForwardRefExoticComponent<Omit<DefaultProps & HTMLAttributes<HTMLSpanElement>, "data-size" | "aria-label" | "children" | "variant" | "initials"> & {
    /**
     * The name of the person the avatar represents.
     */
    'aria-label': string;
    /**
     * The size of the avatar.
     */
    'data-size'?: "xs" | Size;
    /**
     * The shape of the avatar.
     *
     * @default 'circle'
     */
    variant?: "circle" | "square";
    /**
     * Initials to display inside the avatar.
     */
    initials?: string;
    /**
     * Image, icon or initials to display inside the avatar.
     *
     * Gets `aria-hidden="true"`
     */
    children?: ReactNode;
} & React.RefAttributes<HTMLSpanElement>>;
//# sourceMappingURL=Avatar.d.ts.map