import { type ReactNode } from 'react';
import type { DefaultProps, LabelRequired } from '../../types';
import { type FieldCounterProps } from '../Field';
import { type InputProps } from '../Input';
import { type TextareaProps } from '../Textarea';
type InputProps_ = Omit<InputProps, 'prefix' | 'className' | 'style' | 'data-color' | 'type'>;
type TextareaProps_ = Omit<TextareaProps, 'prefix' | 'className' | 'style'>;
type SharedTextfieldProps = {
    /**
     * Classname on the wrapper element `Field`
     */
    className?: InputProps['className'];
    /**
     * Style on the wrapper element `Field`
     * @default undefined
     */
    style?: InputProps['style'];
    /**
     * Label
     */
    label?: ReactNode;
    /**
     * Description
     */
    description?: ReactNode;
    /**
     * Prefix
     */
    prefix?: string;
    /**
     * Suffix
     */
    suffix?: string;
    /**
     * Error message for field
     */
    error?: ReactNode;
    /**
     * Uses `Field.Counter` to display a character counter
     * Pass a number to set a limit, or an object to configure the counter
     */
    counter?: FieldCounterProps | number;
} & LabelRequired & Omit<DefaultProps, 'data-color'>;
type TextfieldTextareaProps = {
    /**
     * Use to render a `Textarea` instead of `Input` for multiline support
     **/
    multiline: true;
} & TextareaProps_;
type TextfieldInputProps = {
    /**
     * Use to render a `Textarea` instead of `Input` for multiline support
     **/
    multiline?: never | false;
    /**
     * Supported `input` types
     *
     * @default 'text'
     * */
    type?: Omit<InputProps['type'], 'radio' | 'checkbox' | 'image'>;
} & InputProps_;
export type TextfieldProps = SharedTextfieldProps & (TextfieldTextareaProps | TextfieldInputProps);
/**
 *  Composed text input component using `Field`
 *
 * `classname` & `style` are passed to the wrapper elements.
 *
 * Rest props are passed to the `Input` or `Textarea` component.
 * @example
 * <Textfield label="Textfield label">
 */
export declare const Textfield: React.ForwardRefExoticComponent<TextfieldProps & React.RefAttributes<HTMLInputElement | HTMLTextAreaElement>>;
export {};
//# sourceMappingURL=Textfield.d.ts.map