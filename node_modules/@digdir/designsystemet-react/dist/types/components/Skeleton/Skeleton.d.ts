import { type HTMLAttributes } from 'react';
export type SkeletonProps = {
    /**
     * The width of the component
     */
    width?: string | number;
    /**
     * The height of the component
     */
    height?: string | number;
    /**
     * The shape variant
     * @default 'rectangle'
     */
    variant?: 'rectangle' | 'circle' | 'text';
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & HTMLAttributes<HTMLSpanElement> & ({
    variant: 'text';
    characters?: number;
} | {
    variant?: 'rectangle' | 'circle';
    characters?: never;
});
/**
 * Skeleton is used to represent a draft of page while the content loads.
 *
 * @example
 * <Skeleton variant="circle" />
 * <Skeleton variant="text" />
 * <Skeleton variant="rectangle" />
 */
export declare const Skeleton: React.ForwardRefExoticComponent<SkeletonProps & React.RefAttributes<HTMLSpanElement>>;
//# sourceMappingURL=Skeleton.d.ts.map