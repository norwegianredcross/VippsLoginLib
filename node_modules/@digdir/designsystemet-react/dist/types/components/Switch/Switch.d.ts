import type { InputHTMLAttributes, ReactNode } from 'react';
import type { DefaultProps, LabelRequired } from '../../types';
import type { MergeRight } from '../../utilities';
import { type FieldProps } from '../Field';
import { type InputProps } from '../Input';
export type SwitchProps = MergeRight<DefaultProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'size' | 'type'>, {
    /**
     * Optional aria-label
     */
    'aria-label'?: string;
    /**
     * Radio label
     */
    label?: ReactNode;
    /**
     * Description for field
     */
    description?: ReactNode;
    /**
     * Value of the `input` element
     */
    value?: InputProps['value'];
    /**
     * Position of switch
     * @default start
     */
    position?: FieldProps['position'];
} & LabelRequired>;
/**
 * Switch used to toggle options.
 *
 * @example
 * <Switch label="I agree" value="agree" />
 */
export declare const Switch: React.ForwardRefExoticComponent<SwitchProps & React.RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=Switch.d.ts.map