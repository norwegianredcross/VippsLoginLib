import type { HTMLAttributes } from 'react';
import type { DefaultProps } from '../../types';
type ErrorSummaryContextType = {
    headingId?: string;
    setHeadingId: (id: string) => void;
};
export declare const ErrorSummaryContext: React.Context<ErrorSummaryContextType>;
export type ErrorSummaryProps = {
    asChild?: React.ReactNode;
} & Omit<HTMLAttributes<HTMLDivElement> & DefaultProps, 'data-color'>;
/**
 * ErrorSummary component, used to display a list of errors.
 *
 * @example
 * <ErrorSummary>
 *   <ErrorSummary.Heading>Heading</ErrorSummary.Heading>
 *   <ErrorSummary.List>
 *     <ErrorSummary.Item>
 *       <ErrorSummary.Link href='#'>Error 1</ErrorSummary.Link>
 *     </ErrorSummary.Item>
 *     <ErrorSummary.Item>
 *       <ErrorSummary.Link href='#'>Error 2</ErrorSummary.Link>
 *     </ErrorSummary.Item>
 *   </ErrorSummary.List>
 * </ErrorSummary>
 */
export declare const ErrorSummary: React.ForwardRefExoticComponent<{
    asChild?: React.ReactNode;
} & Omit<HTMLAttributes<HTMLDivElement> & DefaultProps, "data-color"> & React.RefAttributes<HTMLDivElement>>;
export {};
//# sourceMappingURL=ErrorSummary.d.ts.map