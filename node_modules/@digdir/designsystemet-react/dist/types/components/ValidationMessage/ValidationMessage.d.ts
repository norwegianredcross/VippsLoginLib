import type { HTMLAttributes } from 'react';
import type { SeverityColors } from '../../colors';
import type { DefaultProps } from '../../types';
import type { MergeRight } from '../../utilities';
export type ValidationMessageProps = MergeRight<Omit<DefaultProps, 'data-color'> & HTMLAttributes<HTMLParagraphElement>, {
    /**
     * Sets color and icon.
     * @default 'danger'
     */
    'data-color'?: SeverityColors;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
}>;
/**
 * Use `ValidationMessage` to display validation text
 *
 * @example
 * <ValidationMessage>This is a danger validation message</ValidationMessage>
 */
export declare const ValidationMessage: React.ForwardRefExoticComponent<Omit<Omit<DefaultProps, "data-color"> & HTMLAttributes<HTMLParagraphElement>, "data-color" | "asChild"> & {
    /**
     * Sets color and icon.
     * @default 'danger'
     */
    'data-color'?: SeverityColors;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & React.RefAttributes<HTMLParagraphElement>>;
//# sourceMappingURL=ValidationMessage.d.ts.map