import type { ReactNode } from 'react';
import type { DefaultProps, LabelRequired } from '../../types';
import type { MergeRight } from '../../utilities';
import { type InputProps } from '../Input';
export type CheckboxProps = MergeRight<DefaultProps & Omit<InputProps, 'type' | 'role' | 'size'>, {
    /**
     * Optional aria-label
     */
    'aria-label'?: string;
    /**
     * Checkbox label
     */
    label?: ReactNode;
    /**
     * Description for field
     */
    description?: ReactNode;
    /**
     * Value of the `input` element
     */
    value?: InputProps['value'];
    /**
     * Error message for field
     */
    error?: ReactNode;
} & LabelRequired>;
/**
 * Checkbox used to select multiple options.
 *
 * @example
 * <Checkbox label="I agree" value="agree" />
 */
export declare const Checkbox: React.ForwardRefExoticComponent<CheckboxProps & React.RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=Checkbox.d.ts.map