import { TabsList } from './TabsList';
import { TabsPanel } from './TabsPanel';
import { TabsTab } from './TabsTab';
/**
 * Display a group of tabs that can be toggled between.
 *
 * @example
 * <Tabs onChange={(value) => console.log(value)}>
 *   <Tabs.List>
 *     <Tabs.Tab value='1'>Tab 1</Tabs.Tab>
 *     <Tabs.Tab value='2'>Tab 2</Tabs.Tab>
 *     <Tabs.Tab value='3'>Tab 3</Tabs.Tab>
 *   </Tabs.List>
 *   <Tabs.Panel value='1'>content 1</Tabs.Panel>
 *   <Tabs.Panel value='2'>content 2</Tabs.Panel>
 *   <Tabs.Panel value='3'>content 3</Tabs.Panel>
 * </Tabs>
 */
declare const Tabs: React.ForwardRefExoticComponent<Omit<import("../../types").DefaultProps & Omit<React.HTMLAttributes<HTMLDivElement>, "value" | "onChange">, "value" | "onChange" | "defaultValue"> & {
    value?: string;
    defaultValue?: string;
    onChange?: (value: string) => void;
} & React.RefAttributes<HTMLDivElement>> & {
    List: React.ForwardRefExoticComponent<import("./TabsList").TabsListProps & React.RefAttributes<HTMLDivElement>>;
    Tab: React.ForwardRefExoticComponent<{
        value: string;
    } & Omit<React.HTMLAttributes<HTMLButtonElement>, "value"> & React.RefAttributes<HTMLButtonElement>>;
    Panel: React.ForwardRefExoticComponent<{
        value: string;
    } & Omit<React.HTMLAttributes<HTMLDivElement>, "value"> & React.RefAttributes<HTMLDivElement>>;
};
export type { TabsProps } from './Tabs';
export type { TabsListProps } from './TabsList';
export type { TabsTabProps } from './TabsTab';
export type { TabsPanelProps } from './TabsPanel';
export { Tabs, TabsTab, TabsList, TabsPanel };
//# sourceMappingURL=index.d.ts.map