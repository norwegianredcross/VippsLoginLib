{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { setReactInputValue } from '../Combobox/utilities.js';\nimport { Button } from '../Button/Button.js';\n\n/**\n * SearchClear component, used to display a clear buttun when the search input is not empty.\n *\n * @example\n * <Search>\n *   <Search.Input aria-label='Søk' />\n *   <Search.Clear />\n * </Search>\n */\nconst SearchClear = forwardRef(function SearchClear({\n  'aria-label': label = 'Tøm',\n  onClick,\n  ...rest\n}, ref) {\n  const handleClear = e => {\n    const target = e.target;\n    let input = null;\n    if (target instanceof HTMLElement) input = target.closest('.ds-search')?.querySelector('input');\n    if (!input) throw new Error('Input is missing');\n    /* narrow type to make TS happy */\n    if (!(input instanceof HTMLInputElement)) throw new Error('Input is not an input element');\n    e.preventDefault();\n    setReactInputValue(input, '');\n    input.focus();\n    onClick?.(e);\n  };\n  return jsx(Button, {\n    ref: ref,\n    variant: 'tertiary',\n    type: 'reset',\n    \"aria-label\": label,\n    onClick: handleClear,\n    icon: true,\n    ...rest\n  });\n});\nexport { SearchClear };","map":{"version":3,"names":["jsx","forwardRef","setReactInputValue","Button","SearchClear","label","onClick","rest","ref","handleClear","e","target","input","HTMLElement","closest","querySelector","Error","HTMLInputElement","preventDefault","focus","variant","type","icon"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Search/SearchClear.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { setReactInputValue } from '../Combobox/utilities.js';\nimport { Button } from '../Button/Button.js';\n\n/**\n * SearchClear component, used to display a clear buttun when the search input is not empty.\n *\n * @example\n * <Search>\n *   <Search.Input aria-label='Søk' />\n *   <Search.Clear />\n * </Search>\n */\nconst SearchClear = forwardRef(function SearchClear({ 'aria-label': label = 'Tøm', onClick, ...rest }, ref) {\n    const handleClear = (e) => {\n        const target = e.target;\n        let input = null;\n        if (target instanceof HTMLElement)\n            input = target.closest('.ds-search')?.querySelector('input');\n        if (!input)\n            throw new Error('Input is missing');\n        /* narrow type to make TS happy */\n        if (!(input instanceof HTMLInputElement))\n            throw new Error('Input is not an input element');\n        e.preventDefault();\n        setReactInputValue(input, '');\n        input.focus();\n        onClick?.(e);\n    };\n    return (jsx(Button, { ref: ref, variant: 'tertiary', type: 'reset', \"aria-label\": label, onClick: handleClear, icon: true, ...rest }));\n});\n\nexport { SearchClear };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,MAAM,QAAQ,qBAAqB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGH,UAAU,CAAC,SAASG,WAAWA,CAAC;EAAE,YAAY,EAAEC,KAAK,GAAG,KAAK;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EACxG,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAAM;IACvB,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAID,MAAM,YAAYE,WAAW,EAC7BD,KAAK,GAAGD,MAAM,CAACG,OAAO,CAAC,YAAY,CAAC,EAAEC,aAAa,CAAC,OAAO,CAAC;IAChE,IAAI,CAACH,KAAK,EACN,MAAM,IAAII,KAAK,CAAC,kBAAkB,CAAC;IACvC;IACA,IAAI,EAAEJ,KAAK,YAAYK,gBAAgB,CAAC,EACpC,MAAM,IAAID,KAAK,CAAC,+BAA+B,CAAC;IACpDN,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClBhB,kBAAkB,CAACU,KAAK,EAAE,EAAE,CAAC;IAC7BA,KAAK,CAACO,KAAK,CAAC,CAAC;IACbb,OAAO,GAAGI,CAAC,CAAC;EAChB,CAAC;EACD,OAAQV,GAAG,CAACG,MAAM,EAAE;IAAEK,GAAG,EAAEA,GAAG;IAAEY,OAAO,EAAE,UAAU;IAAEC,IAAI,EAAE,OAAO;IAAE,YAAY,EAAEhB,KAAK;IAAEC,OAAO,EAAEG,WAAW;IAAEa,IAAI,EAAE,IAAI;IAAE,GAAGf;EAAK,CAAC,CAAC;AACzI,CAAC,CAAC;AAEF,SAASH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}