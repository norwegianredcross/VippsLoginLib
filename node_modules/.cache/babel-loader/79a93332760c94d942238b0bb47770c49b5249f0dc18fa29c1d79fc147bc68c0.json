{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, createContext, useId, useState } from 'react';\nconst ErrorSummaryContext = createContext({\n  headingId: 'heading',\n  setHeadingId: () => {}\n});\n/**\n * ErrorSummary component, used to display a list of errors.\n *\n * @example\n * <ErrorSummary>\n *   <ErrorSummary.Heading>Heading</ErrorSummary.Heading>\n *   <ErrorSummary.List>\n *     <ErrorSummary.Item>\n *       <ErrorSummary.Link href='#'>Error 1</ErrorSummary.Link>\n *     </ErrorSummary.Item>\n *     <ErrorSummary.Item>\n *       <ErrorSummary.Link href='#'>Error 2</ErrorSummary.Link>\n *     </ErrorSummary.Item>\n *   </ErrorSummary.List>\n * </ErrorSummary>\n */\nconst ErrorSummary = forwardRef(function ErrorSummary({\n  asChild,\n  role = 'alert',\n  'aria-live': ariaLive = 'polite',\n  'aria-relevant': ariaRelevant = 'all',\n  className,\n  ...rest\n}, ref) {\n  const randomId = useId();\n  const [headingId, setHeadingId] = useState(randomId);\n  const Component = asChild ? Slot : 'div';\n  return jsx(ErrorSummaryContext.Provider, {\n    value: {\n      headingId,\n      setHeadingId\n    },\n    children: jsx(Component, {\n      \"aria-labelledby\": headingId,\n      \"aria-live\": ariaLive,\n      \"aria-relevant\": ariaRelevant,\n      className: cl('ds-error-summary', className),\n      ref: ref,\n      role: role,\n      ...rest\n    })\n  });\n});\nexport { ErrorSummary, ErrorSummaryContext };","map":{"version":3,"names":["jsx","Slot","cl","forwardRef","createContext","useId","useState","ErrorSummaryContext","headingId","setHeadingId","ErrorSummary","asChild","role","ariaLive","ariaRelevant","className","rest","ref","randomId","Component","Provider","value","children"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/ErrorSummary/ErrorSummary.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, createContext, useId, useState } from 'react';\n\nconst ErrorSummaryContext = createContext({\n    headingId: 'heading',\n    setHeadingId: () => { },\n});\n/**\n * ErrorSummary component, used to display a list of errors.\n *\n * @example\n * <ErrorSummary>\n *   <ErrorSummary.Heading>Heading</ErrorSummary.Heading>\n *   <ErrorSummary.List>\n *     <ErrorSummary.Item>\n *       <ErrorSummary.Link href='#'>Error 1</ErrorSummary.Link>\n *     </ErrorSummary.Item>\n *     <ErrorSummary.Item>\n *       <ErrorSummary.Link href='#'>Error 2</ErrorSummary.Link>\n *     </ErrorSummary.Item>\n *   </ErrorSummary.List>\n * </ErrorSummary>\n */\nconst ErrorSummary = forwardRef(function ErrorSummary({ asChild, role = 'alert', 'aria-live': ariaLive = 'polite', 'aria-relevant': ariaRelevant = 'all', className, ...rest }, ref) {\n    const randomId = useId();\n    const [headingId, setHeadingId] = useState(randomId);\n    const Component = asChild ? Slot : 'div';\n    return (jsx(ErrorSummaryContext.Provider, { value: { headingId, setHeadingId }, children: jsx(Component, { \"aria-labelledby\": headingId, \"aria-live\": ariaLive, \"aria-relevant\": ariaRelevant, className: cl('ds-error-summary', className), ref: ref, role: role, ...rest }) }));\n});\n\nexport { ErrorSummary, ErrorSummaryContext };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAOC,EAAE,MAAM,WAAW;AAC1B,SAASC,UAAU,EAAEC,aAAa,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAElE,MAAMC,mBAAmB,GAAGH,aAAa,CAAC;EACtCI,SAAS,EAAE,SAAS;EACpBC,YAAY,EAAEA,CAAA,KAAM,CAAE;AAC1B,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGP,UAAU,CAAC,SAASO,YAAYA,CAAC;EAAEC,OAAO;EAAEC,IAAI,GAAG,OAAO;EAAE,WAAW,EAAEC,QAAQ,GAAG,QAAQ;EAAE,eAAe,EAAEC,YAAY,GAAG,KAAK;EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EACjL,MAAMC,QAAQ,GAAGb,KAAK,CAAC,CAAC;EACxB,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAACY,QAAQ,CAAC;EACpD,MAAMC,SAAS,GAAGR,OAAO,GAAGV,IAAI,GAAG,KAAK;EACxC,OAAQD,GAAG,CAACO,mBAAmB,CAACa,QAAQ,EAAE;IAAEC,KAAK,EAAE;MAAEb,SAAS;MAAEC;IAAa,CAAC;IAAEa,QAAQ,EAAEtB,GAAG,CAACmB,SAAS,EAAE;MAAE,iBAAiB,EAAEX,SAAS;MAAE,WAAW,EAAEK,QAAQ;MAAE,eAAe,EAAEC,YAAY;MAAEC,SAAS,EAAEb,EAAE,CAAC,kBAAkB,EAAEa,SAAS,CAAC;MAAEE,GAAG,EAAEA,GAAG;MAAEL,IAAI,EAAEA,IAAI;MAAE,GAAGI;IAAK,CAAC;EAAE,CAAC,CAAC;AACpR,CAAC,CAAC;AAEF,SAASN,YAAY,EAAEH,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}