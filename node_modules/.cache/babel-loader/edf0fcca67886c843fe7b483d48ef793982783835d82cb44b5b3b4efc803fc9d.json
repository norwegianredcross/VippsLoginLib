{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport { getDatalistValue, syncDatalistState } from '@u-elements/u-datalist';\nimport cl from 'clsx/lite';\nimport { forwardRef, createContext, useState, useId, useRef, useCallback } from 'react';\nconst SuggestionContext = createContext({});\n/**\n * A component that provides a suggestion list for an input field.\n *\n * @example\n * <Suggestion>\n *   <Suggestion.Input />\n *   <Suggestion.Clear />\n *   <Suggestion.List>\n *     <Suggestion.Empty>Tomt</Suggestion.Empty>\n *     <Suggestion.Option value='Option 1'>Option 1</Suggestion.Option>\n *     <Suggestion.Option value='Option 2'>Option 2</Suggestion.Option>\n *   </Suggestion.List>\n * </Suggestion>\n */\nconst Suggestion = forwardRef(function Suggestion({\n  className,\n  filter = true,\n  asChild,\n  ...rest\n}, ref) {\n  const Component = asChild ? Slot : 'div';\n  const [listId, setListId] = useState(useId());\n  const inputRef = useRef(null);\n  const handleFilter = useCallback(input => {\n    const list = input?.list;\n    // Let <datalist> handle filtering if filter is true\n    if (filter === true || !list) return;\n    console.log(list);\n    // Handle custom filter\n    if (filter !== false) {\n      let index = 0;\n      for (const option of list.getElementsByTagName('u-option')) {\n        if (!option.hasAttribute('data-empty')) option.disabled = !filter({\n          index: index++,\n          // Increment index for each <option>\n          input,\n          optionElement: option,\n          text: option.text,\n          value: getDatalistValue(option)\n        });\n      }\n    }\n    syncDatalistState(input); // Sync the datalist state if filter is custom or false\n  }, [filter]);\n  return jsx(SuggestionContext.Provider, {\n    value: {\n      inputRef,\n      listId,\n      setListId,\n      handleFilter\n    },\n    children: jsx(Component, {\n      className: cl('ds-suggestion', className),\n      ref: ref,\n      ...rest\n    })\n  });\n});\nexport { Suggestion, SuggestionContext };","map":{"version":3,"names":["jsx","Slot","getDatalistValue","syncDatalistState","cl","forwardRef","createContext","useState","useId","useRef","useCallback","SuggestionContext","Suggestion","className","filter","asChild","rest","ref","Component","listId","setListId","inputRef","handleFilter","input","list","console","log","index","option","getElementsByTagName","hasAttribute","disabled","optionElement","text","value","Provider","children"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Suggestion/Suggestion.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport { getDatalistValue, syncDatalistState } from '@u-elements/u-datalist';\nimport cl from 'clsx/lite';\nimport { forwardRef, createContext, useState, useId, useRef, useCallback } from 'react';\n\nconst SuggestionContext = createContext({});\n/**\n * A component that provides a suggestion list for an input field.\n *\n * @example\n * <Suggestion>\n *   <Suggestion.Input />\n *   <Suggestion.Clear />\n *   <Suggestion.List>\n *     <Suggestion.Empty>Tomt</Suggestion.Empty>\n *     <Suggestion.Option value='Option 1'>Option 1</Suggestion.Option>\n *     <Suggestion.Option value='Option 2'>Option 2</Suggestion.Option>\n *   </Suggestion.List>\n * </Suggestion>\n */\nconst Suggestion = forwardRef(function Suggestion({ className, filter = true, asChild, ...rest }, ref) {\n    const Component = asChild ? Slot : 'div';\n    const [listId, setListId] = useState(useId());\n    const inputRef = useRef(null);\n    const handleFilter = useCallback((input) => {\n        const list = input?.list;\n        // Let <datalist> handle filtering if filter is true\n        if (filter === true || !list)\n            return;\n        console.log(list);\n        // Handle custom filter\n        if (filter !== false) {\n            let index = 0;\n            for (const option of list.getElementsByTagName('u-option')) {\n                if (!option.hasAttribute('data-empty'))\n                    option.disabled = !filter({\n                        index: index++, // Increment index for each <option>\n                        input,\n                        optionElement: option,\n                        text: option.text,\n                        value: getDatalistValue(option),\n                    });\n            }\n        }\n        syncDatalistState(input); // Sync the datalist state if filter is custom or false\n    }, [filter]);\n    return (jsx(SuggestionContext.Provider, { value: { inputRef, listId, setListId, handleFilter }, children: jsx(Component, { className: cl('ds-suggestion', className), ref: ref, ...rest }) }));\n});\n\nexport { Suggestion, SuggestionContext };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,wBAAwB;AAC5E,OAAOC,EAAE,MAAM,WAAW;AAC1B,SAASC,UAAU,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAEvF,MAAMC,iBAAiB,GAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,UAAU,GAAGP,UAAU,CAAC,SAASO,UAAUA,CAAC;EAAEC,SAAS;EAAEC,MAAM,GAAG,IAAI;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EACnG,MAAMC,SAAS,GAAGH,OAAO,GAAGd,IAAI,GAAG,KAAK;EACxC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAMa,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMa,YAAY,GAAGZ,WAAW,CAAEa,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,EAAEC,IAAI;IACxB;IACA,IAAIV,MAAM,KAAK,IAAI,IAAI,CAACU,IAAI,EACxB;IACJC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB;IACA,IAAIV,MAAM,KAAK,KAAK,EAAE;MAClB,IAAIa,KAAK,GAAG,CAAC;MACb,KAAK,MAAMC,MAAM,IAAIJ,IAAI,CAACK,oBAAoB,CAAC,UAAU,CAAC,EAAE;QACxD,IAAI,CAACD,MAAM,CAACE,YAAY,CAAC,YAAY,CAAC,EAClCF,MAAM,CAACG,QAAQ,GAAG,CAACjB,MAAM,CAAC;UACtBa,KAAK,EAAEA,KAAK,EAAE;UAAE;UAChBJ,KAAK;UACLS,aAAa,EAAEJ,MAAM;UACrBK,IAAI,EAAEL,MAAM,CAACK,IAAI;UACjBC,KAAK,EAAEhC,gBAAgB,CAAC0B,MAAM;QAClC,CAAC,CAAC;MACV;IACJ;IACAzB,iBAAiB,CAACoB,KAAK,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EACZ,OAAQd,GAAG,CAACW,iBAAiB,CAACwB,QAAQ,EAAE;IAAED,KAAK,EAAE;MAAEb,QAAQ;MAAEF,MAAM;MAAEC,SAAS;MAAEE;IAAa,CAAC;IAAEc,QAAQ,EAAEpC,GAAG,CAACkB,SAAS,EAAE;MAAEL,SAAS,EAAET,EAAE,CAAC,eAAe,EAAES,SAAS,CAAC;MAAEI,GAAG,EAAEA,GAAG;MAAE,GAAGD;IAAK,CAAC;EAAE,CAAC,CAAC;AACjM,CAAC,CAAC;AAEF,SAASJ,UAAU,EAAED,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}