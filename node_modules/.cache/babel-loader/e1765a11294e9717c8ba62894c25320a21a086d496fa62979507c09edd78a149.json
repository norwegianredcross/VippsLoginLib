{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@floating-ui/react';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, useRef, useEffect } from 'react';\n\n/**\n * Card component to present content in a structured way.\n *\n * @example\n * <Card>\n *  <Card.Block>Header</Card.Block>\n *  <Card.Block>Content</Card.Block>\n *  <Card.Block>Footer</Card.Block>\n * </Card>\n */\nconst Card = forwardRef(function Card({\n  asChild = false,\n  variant = 'default',\n  className,\n  ...rest\n}, ref) {\n  const Component = asChild ? Slot : 'div';\n  const cardRef = useRef(null);\n  const mergedRefs = useMergeRefs([cardRef, ref]);\n  // Forward click on card to heading links for better accessibility\n  // https://adrianroselli.com/2020/02/block-links-cards-clickable-regions-etc.html\n  useEffect(() => {\n    const card = cardRef.current;\n    const handleClick = ({\n      ctrlKey,\n      metaKey,\n      target\n    }) => {\n      const link = card?.querySelector(':is(h1,h2,h3,h4,h5,h6) a');\n      if (!link || link?.contains(target)) return; // Let links handle their own clicks\n      if (ctrlKey || metaKey) window.open(link.href, '', 'noreferrer');else link.click(); // Using link.click instead of window.location.href as this will trigger the browser's handling of rel=, target=, etc.\n    };\n    card?.addEventListener('click', handleClick);\n    return () => card?.removeEventListener('click', handleClick);\n  }, []);\n  return jsx(Component, {\n    className: cl(`ds-card`, className),\n    \"data-variant\": variant,\n    ref: mergedRefs,\n    ...rest\n  });\n});\nexport { Card };","map":{"version":3,"names":["jsx","useMergeRefs","Slot","cl","forwardRef","useRef","useEffect","Card","asChild","variant","className","rest","ref","Component","cardRef","mergedRefs","card","current","handleClick","ctrlKey","metaKey","target","link","querySelector","contains","window","open","href","click","addEventListener","removeEventListener"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Card/Card.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@floating-ui/react';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, useRef, useEffect } from 'react';\n\n/**\n * Card component to present content in a structured way.\n *\n * @example\n * <Card>\n *  <Card.Block>Header</Card.Block>\n *  <Card.Block>Content</Card.Block>\n *  <Card.Block>Footer</Card.Block>\n * </Card>\n */\nconst Card = forwardRef(function Card({ asChild = false, variant = 'default', className, ...rest }, ref) {\n    const Component = asChild ? Slot : 'div';\n    const cardRef = useRef(null);\n    const mergedRefs = useMergeRefs([cardRef, ref]);\n    // Forward click on card to heading links for better accessibility\n    // https://adrianroselli.com/2020/02/block-links-cards-clickable-regions-etc.html\n    useEffect(() => {\n        const card = cardRef.current;\n        const handleClick = ({ ctrlKey, metaKey, target }) => {\n            const link = card?.querySelector(':is(h1,h2,h3,h4,h5,h6) a');\n            if (!link || link?.contains(target))\n                return; // Let links handle their own clicks\n            if (ctrlKey || metaKey)\n                window.open(link.href, '', 'noreferrer');\n            else\n                link.click(); // Using link.click instead of window.location.href as this will trigger the browser's handling of rel=, target=, etc.\n        };\n        card?.addEventListener('click', handleClick);\n        return () => card?.removeEventListener('click', handleClick);\n    }, []);\n    return (jsx(Component, { className: cl(`ds-card`, className), \"data-variant\": variant, ref: mergedRefs, ...rest }));\n});\n\nexport { Card };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAOC,EAAE,MAAM,WAAW;AAC1B,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAGH,UAAU,CAAC,SAASG,IAAIA,CAAC;EAAEC,OAAO,GAAG,KAAK;EAAEC,OAAO,GAAG,SAAS;EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EACrG,MAAMC,SAAS,GAAGL,OAAO,GAAGN,IAAI,GAAG,KAAK;EACxC,MAAMY,OAAO,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMU,UAAU,GAAGd,YAAY,CAAC,CAACa,OAAO,EAAEF,GAAG,CAAC,CAAC;EAC/C;EACA;EACAN,SAAS,CAAC,MAAM;IACZ,MAAMU,IAAI,GAAGF,OAAO,CAACG,OAAO;IAC5B,MAAMC,WAAW,GAAGA,CAAC;MAAEC,OAAO;MAAEC,OAAO;MAAEC;IAAO,CAAC,KAAK;MAClD,MAAMC,IAAI,GAAGN,IAAI,EAAEO,aAAa,CAAC,0BAA0B,CAAC;MAC5D,IAAI,CAACD,IAAI,IAAIA,IAAI,EAAEE,QAAQ,CAACH,MAAM,CAAC,EAC/B,OAAO,CAAC;MACZ,IAAIF,OAAO,IAAIC,OAAO,EAClBK,MAAM,CAACC,IAAI,CAACJ,IAAI,CAACK,IAAI,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC,KAEzCL,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IACDZ,IAAI,EAAEa,gBAAgB,CAAC,OAAO,EAAEX,WAAW,CAAC;IAC5C,OAAO,MAAMF,IAAI,EAAEc,mBAAmB,CAAC,OAAO,EAAEZ,WAAW,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EACN,OAAQlB,GAAG,CAACa,SAAS,EAAE;IAAEH,SAAS,EAAEP,EAAE,CAAC,SAAS,EAAEO,SAAS,CAAC;IAAE,cAAc,EAAED,OAAO;IAAEG,GAAG,EAAEG,UAAU;IAAE,GAAGJ;EAAK,CAAC,CAAC;AACtH,CAAC,CAAC;AAEF,SAASJ,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}