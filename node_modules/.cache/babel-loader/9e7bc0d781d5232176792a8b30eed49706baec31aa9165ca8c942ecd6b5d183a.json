{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { Field } from '../Field/index.js';\nimport { Label } from '../Label/Label.js';\nimport { FieldDescription } from '../Field/FieldDescription.js';\nimport { FieldAffixes, FieldAffix } from '../Field/FieldAffix.js';\nimport { Textarea } from '../Textarea/Textarea.js';\nimport { Input } from '../Input/Input.js';\nimport { ValidationMessage } from '../ValidationMessage/ValidationMessage.js';\n\n/**\n *  Composed text input component using `Field`\n *\n * `classname` & `style` are passed to the wrapper elements.\n *\n * Rest props are passed to the `Input` or `Textarea` component.\n * @example\n * <Textfield label=\"Textfield label\">\n */\nconst Textfield = forwardRef(function Textfield({\n  label,\n  description,\n  error,\n  multiline,\n  prefix,\n  suffix,\n  'data-size': size,\n  counter,\n  style,\n  className,\n  ...rest\n}, ref) {\n  return jsxs(Field, {\n    className: className,\n    \"data-size\": size,\n    style: style,\n    children: [!!label && jsx(Label, {\n      children: label\n    }), !!description && jsx(FieldDescription, {\n      children: description\n    }), jsxs(FieldAffixes, {\n      children: [prefix === undefined || jsx(FieldAffix, {\n        children: prefix\n      }), multiline === true ? jsx(Textarea, {\n        ref: ref,\n        \"aria-invalid\": Boolean(error) || undefined,\n        ...rest\n      }) : jsx(Input, {\n        ref: ref,\n        \"aria-invalid\": Boolean(error) || undefined,\n        ...rest\n      }), suffix === undefined || jsx(FieldAffix, {\n        children: suffix\n      })]\n    }), !!error && jsx(ValidationMessage, {\n      children: error\n    }), !!counter && jsx(Field.Counter, {\n      ...(typeof counter === 'number' ? {\n        limit: counter\n      } : counter)\n    })]\n  });\n});\nexport { Textfield };","map":{"version":3,"names":["jsxs","jsx","forwardRef","Field","Label","FieldDescription","FieldAffixes","FieldAffix","Textarea","Input","ValidationMessage","Textfield","label","description","error","multiline","prefix","suffix","size","counter","style","className","rest","ref","children","undefined","Boolean","Counter","limit"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Textfield/Textfield.js"],"sourcesContent":["'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { Field } from '../Field/index.js';\nimport { Label } from '../Label/Label.js';\nimport { FieldDescription } from '../Field/FieldDescription.js';\nimport { FieldAffixes, FieldAffix } from '../Field/FieldAffix.js';\nimport { Textarea } from '../Textarea/Textarea.js';\nimport { Input } from '../Input/Input.js';\nimport { ValidationMessage } from '../ValidationMessage/ValidationMessage.js';\n\n/**\n *  Composed text input component using `Field`\n *\n * `classname` & `style` are passed to the wrapper elements.\n *\n * Rest props are passed to the `Input` or `Textarea` component.\n * @example\n * <Textfield label=\"Textfield label\">\n */\nconst Textfield = forwardRef(function Textfield({ label, description, error, multiline, prefix, suffix, 'data-size': size, counter, style, className, ...rest }, ref) {\n    return (jsxs(Field, { className: className, \"data-size\": size, style: style, children: [!!label && jsx(Label, { children: label }), !!description && jsx(FieldDescription, { children: description }), jsxs(FieldAffixes, { children: [prefix === undefined || jsx(FieldAffix, { children: prefix }), multiline === true ? (jsx(Textarea, { ref: ref, \"aria-invalid\": Boolean(error) || undefined, ...rest })) : (jsx(Input, { ref: ref, \"aria-invalid\": Boolean(error) || undefined, ...rest })), suffix === undefined || jsx(FieldAffix, { children: suffix })] }), !!error && jsx(ValidationMessage, { children: error }), !!counter && (jsx(Field.Counter, { ...(typeof counter === 'number' ? { limit: counter } : counter) }))] }));\n});\n\nexport { Textfield };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,IAAI,EAAEC,GAAG,QAAQ,mBAAmB;AAC7C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,YAAY,EAAEC,UAAU,QAAQ,wBAAwB;AACjE,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,iBAAiB,QAAQ,2CAA2C;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAGT,UAAU,CAAC,SAASS,SAASA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC,KAAK;EAAEC,SAAS;EAAEC,MAAM;EAAEC,MAAM;EAAE,WAAW,EAAEC,IAAI;EAAEC,OAAO;EAAEC,KAAK;EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAClK,OAAQvB,IAAI,CAACG,KAAK,EAAE;IAAEkB,SAAS,EAAEA,SAAS;IAAE,WAAW,EAAEH,IAAI;IAAEE,KAAK,EAAEA,KAAK;IAAEI,QAAQ,EAAE,CAAC,CAAC,CAACZ,KAAK,IAAIX,GAAG,CAACG,KAAK,EAAE;MAAEoB,QAAQ,EAAEZ;IAAM,CAAC,CAAC,EAAE,CAAC,CAACC,WAAW,IAAIZ,GAAG,CAACI,gBAAgB,EAAE;MAAEmB,QAAQ,EAAEX;IAAY,CAAC,CAAC,EAAEb,IAAI,CAACM,YAAY,EAAE;MAAEkB,QAAQ,EAAE,CAACR,MAAM,KAAKS,SAAS,IAAIxB,GAAG,CAACM,UAAU,EAAE;QAAEiB,QAAQ,EAAER;MAAO,CAAC,CAAC,EAAED,SAAS,KAAK,IAAI,GAAId,GAAG,CAACO,QAAQ,EAAE;QAAEe,GAAG,EAAEA,GAAG;QAAE,cAAc,EAAEG,OAAO,CAACZ,KAAK,CAAC,IAAIW,SAAS;QAAE,GAAGH;MAAK,CAAC,CAAC,GAAKrB,GAAG,CAACQ,KAAK,EAAE;QAAEc,GAAG,EAAEA,GAAG;QAAE,cAAc,EAAEG,OAAO,CAACZ,KAAK,CAAC,IAAIW,SAAS;QAAE,GAAGH;MAAK,CAAC,CAAE,EAAEL,MAAM,KAAKQ,SAAS,IAAIxB,GAAG,CAACM,UAAU,EAAE;QAAEiB,QAAQ,EAAEP;MAAO,CAAC,CAAC;IAAE,CAAC,CAAC,EAAE,CAAC,CAACH,KAAK,IAAIb,GAAG,CAACS,iBAAiB,EAAE;MAAEc,QAAQ,EAAEV;IAAM,CAAC,CAAC,EAAE,CAAC,CAACK,OAAO,IAAKlB,GAAG,CAACE,KAAK,CAACwB,OAAO,EAAE;MAAE,IAAI,OAAOR,OAAO,KAAK,QAAQ,GAAG;QAAES,KAAK,EAAET;MAAQ,CAAC,GAAGA,OAAO;IAAE,CAAC,CAAE;EAAE,CAAC,CAAC;AAC5sB,CAAC,CAAC;AAEF,SAASR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}