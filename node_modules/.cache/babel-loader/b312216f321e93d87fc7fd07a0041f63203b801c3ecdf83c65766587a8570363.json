{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState, useRef, useEffect } from 'react';\nimport { isInputLike } from './fieldObserver.js';\nimport { ValidationMessage } from '../ValidationMessage/ValidationMessage.js';\nimport { Paragraph } from '../Paragraph/Paragraph.js';\nconst label = (text, count) => text.replace('%d', Math.abs(count).toString());\n/**\n * FieldCounter component, used to display a counter for a form field.\n *\n * @example\n * <Field>\n *   <Input />\n *   <Field.Counter limit={100} under='%d tegn igjen' over='%d tegn for mye' />\n * </Field>\n */\nconst FieldCounter = forwardRef(function FieldCounter({\n  limit,\n  under = '%d tegn igjen',\n  over = '%d tegn for mye',\n  ...rest\n}, ref) {\n  const [count, setCount] = useState(0);\n  const counterRef = useRef(null);\n  const hasExceededLimit = count > limit;\n  const remainder = limit - count;\n  useEffect(() => {\n    const field = counterRef.current?.closest('.ds-field');\n    const input = Array.from(field?.getElementsByTagName('*') || []).find(isInputLike);\n    const onInput = ({\n      target\n    }) => {\n      if (isInputLike(target)) setCount(target.value.length);\n    };\n    if (input) onInput({\n      target: input\n    }); // Initial setup\n    field?.addEventListener('input', onInput);\n    return () => field?.removeEventListener('input', onInput);\n  }, [setCount]);\n  return jsxs(Fragment, {\n    children: [jsx(\"div\", {\n      \"data-field\": 'description',\n      className: 'ds-sr-only',\n      \"aria-live\": 'polite',\n      ref: counterRef,\n      children: hasExceededLimit && label(over, remainder)\n    }), hasExceededLimit ? jsx(ValidationMessage, {\n      ref: ref,\n      ...rest,\n      children: label(over, remainder)\n    }) : jsx(Paragraph, {\n      ref: ref,\n      ...rest,\n      \"data-field\": 'validation',\n      children: label(under, remainder)\n    })]\n  });\n});\nexport { FieldCounter };","map":{"version":3,"names":["jsxs","Fragment","jsx","forwardRef","useState","useRef","useEffect","isInputLike","ValidationMessage","Paragraph","label","text","count","replace","Math","abs","toString","FieldCounter","limit","under","over","rest","ref","setCount","counterRef","hasExceededLimit","remainder","field","current","closest","input","Array","from","getElementsByTagName","find","onInput","target","value","length","addEventListener","removeEventListener","children","className"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Field/FieldCounter.js"],"sourcesContent":["'use client';\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState, useRef, useEffect } from 'react';\nimport { isInputLike } from './fieldObserver.js';\nimport { ValidationMessage } from '../ValidationMessage/ValidationMessage.js';\nimport { Paragraph } from '../Paragraph/Paragraph.js';\n\nconst label = (text, count) => text.replace('%d', Math.abs(count).toString());\n/**\n * FieldCounter component, used to display a counter for a form field.\n *\n * @example\n * <Field>\n *   <Input />\n *   <Field.Counter limit={100} under='%d tegn igjen' over='%d tegn for mye' />\n * </Field>\n */\nconst FieldCounter = forwardRef(function FieldCounter({ limit, under = '%d tegn igjen', over = '%d tegn for mye', ...rest }, ref) {\n    const [count, setCount] = useState(0);\n    const counterRef = useRef(null);\n    const hasExceededLimit = count > limit;\n    const remainder = limit - count;\n    useEffect(() => {\n        const field = counterRef.current?.closest('.ds-field');\n        const input = Array.from(field?.getElementsByTagName('*') || []).find(isInputLike);\n        const onInput = ({ target }) => {\n            if (isInputLike(target))\n                setCount(target.value.length);\n        };\n        if (input)\n            onInput({ target: input }); // Initial setup\n        field?.addEventListener('input', onInput);\n        return () => field?.removeEventListener('input', onInput);\n    }, [setCount]);\n    return (jsxs(Fragment, { children: [jsx(\"div\", { \"data-field\": 'description', className: 'ds-sr-only', \"aria-live\": 'polite', ref: counterRef, children: hasExceededLimit && label(over, remainder) }), hasExceededLimit ? (jsx(ValidationMessage, { ref: ref, ...rest, children: label(over, remainder) })) : (jsx(Paragraph, { ref: ref, ...rest, \"data-field\": 'validation', children: label(under, remainder) }))] }));\n});\n\nexport { FieldCounter };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,IAAI,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,mBAAmB;AACvD,SAASC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,iBAAiB,QAAQ,2CAA2C;AAC7E,SAASC,SAAS,QAAQ,2BAA2B;AAErD,MAAMC,KAAK,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACE,OAAO,CAAC,IAAI,EAAEC,IAAI,CAACC,GAAG,CAACH,KAAK,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGd,UAAU,CAAC,SAASc,YAAYA,CAAC;EAAEC,KAAK;EAAEC,KAAK,GAAG,eAAe;EAAEC,IAAI,GAAG,iBAAiB;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAC9H,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMoB,UAAU,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMoB,gBAAgB,GAAGb,KAAK,GAAGM,KAAK;EACtC,MAAMQ,SAAS,GAAGR,KAAK,GAAGN,KAAK;EAC/BN,SAAS,CAAC,MAAM;IACZ,MAAMqB,KAAK,GAAGH,UAAU,CAACI,OAAO,EAAEC,OAAO,CAAC,WAAW,CAAC;IACtD,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACL,KAAK,EAAEM,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAACC,IAAI,CAAC3B,WAAW,CAAC;IAClF,MAAM4B,OAAO,GAAGA,CAAC;MAAEC;IAAO,CAAC,KAAK;MAC5B,IAAI7B,WAAW,CAAC6B,MAAM,CAAC,EACnBb,QAAQ,CAACa,MAAM,CAACC,KAAK,CAACC,MAAM,CAAC;IACrC,CAAC;IACD,IAAIR,KAAK,EACLK,OAAO,CAAC;MAAEC,MAAM,EAAEN;IAAM,CAAC,CAAC,CAAC,CAAC;IAChCH,KAAK,EAAEY,gBAAgB,CAAC,OAAO,EAAEJ,OAAO,CAAC;IACzC,OAAO,MAAMR,KAAK,EAAEa,mBAAmB,CAAC,OAAO,EAAEL,OAAO,CAAC;EAC7D,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EACd,OAAQvB,IAAI,CAACC,QAAQ,EAAE;IAAEwC,QAAQ,EAAE,CAACvC,GAAG,CAAC,KAAK,EAAE;MAAE,YAAY,EAAE,aAAa;MAAEwC,SAAS,EAAE,YAAY;MAAE,WAAW,EAAE,QAAQ;MAAEpB,GAAG,EAAEE,UAAU;MAAEiB,QAAQ,EAAEhB,gBAAgB,IAAIf,KAAK,CAACU,IAAI,EAAEM,SAAS;IAAE,CAAC,CAAC,EAAED,gBAAgB,GAAIvB,GAAG,CAACM,iBAAiB,EAAE;MAAEc,GAAG,EAAEA,GAAG;MAAE,GAAGD,IAAI;MAAEoB,QAAQ,EAAE/B,KAAK,CAACU,IAAI,EAAEM,SAAS;IAAE,CAAC,CAAC,GAAKxB,GAAG,CAACO,SAAS,EAAE;MAAEa,GAAG,EAAEA,GAAG;MAAE,GAAGD,IAAI;MAAE,YAAY,EAAE,YAAY;MAAEoB,QAAQ,EAAE/B,KAAK,CAACS,KAAK,EAAEO,SAAS;IAAE,CAAC,CAAE;EAAE,CAAC,CAAC;AAC7Z,CAAC,CAAC;AAEF,SAAST,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}