{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MultiSuggestionContext } from './MultiSuggestion.js';\nimport { Button } from '../Button/Button.js';\n\n/**\n * Component that provides a clear button for the MultiSuggestion input.\n *\n * Place as a descendant of `MultiSuggestion`\n *\n * @example\n * <MultiSuggestion>\n *   <MultiSuggestion.Input />\n *   <MultiSuggestion.Clear />\n *   <MultiSuggestion.List />\n * </MultiSuggestion>\n */\nconst MultiSuggestionClear = forwardRef(function MultiSuggestionClear({\n  'aria-label': label = 'Tøm',\n  onClick,\n  ...rest\n}, ref) {\n  const {\n    inputRef\n  } = useContext(MultiSuggestionContext); //, handleValueChange\n  const handleClear = event => {\n    if (!inputRef?.current) throw new Error('Input is missing');\n    /* narrow type to make TS happy */\n    if (!(inputRef?.current instanceof HTMLInputElement)) throw new Error('Input is not an input element');\n    event.preventDefault();\n    setReactInputValue(inputRef.current, '');\n    inputRef.current.focus();\n    onClick?.(event);\n  };\n  return jsx(Button, {\n    ref: ref,\n    variant: 'tertiary',\n    type: 'reset',\n    \"aria-label\": label,\n    onClick: handleClear,\n    icon: true,\n    ...rest\n  });\n});\n// Copied from https://github.com/facebook/react/issues/11488#issuecomment-1300987446\nconst setReactInputValue = (input, value) => {\n  const nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value')?.set;\n  if (nativeInputValueSetter) {\n    nativeInputValueSetter.call(input, value);\n  } else {\n    throw new Error('Unable to find the native input value setter');\n  }\n  const inputEvent = new Event('input', {\n    bubbles: true\n  });\n  const changeEvent = new Event('change', {\n    bubbles: true\n  });\n  input.dispatchEvent(inputEvent);\n  input.dispatchEvent(changeEvent);\n};\nexport { MultiSuggestionClear, setReactInputValue };","map":{"version":3,"names":["jsx","forwardRef","useContext","MultiSuggestionContext","Button","MultiSuggestionClear","label","onClick","rest","ref","inputRef","handleClear","event","current","Error","HTMLInputElement","preventDefault","setReactInputValue","focus","variant","type","icon","input","value","nativeInputValueSetter","Object","getOwnPropertyDescriptor","window","prototype","set","call","inputEvent","Event","bubbles","changeEvent","dispatchEvent"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/MultiSuggestion/MultiSuggestionClear.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MultiSuggestionContext } from './MultiSuggestion.js';\nimport { Button } from '../Button/Button.js';\n\n/**\n * Component that provides a clear button for the MultiSuggestion input.\n *\n * Place as a descendant of `MultiSuggestion`\n *\n * @example\n * <MultiSuggestion>\n *   <MultiSuggestion.Input />\n *   <MultiSuggestion.Clear />\n *   <MultiSuggestion.List />\n * </MultiSuggestion>\n */\nconst MultiSuggestionClear = forwardRef(function MultiSuggestionClear({ 'aria-label': label = 'Tøm', onClick, ...rest }, ref) {\n    const { inputRef } = useContext(MultiSuggestionContext); //, handleValueChange\n    const handleClear = (event) => {\n        if (!inputRef?.current)\n            throw new Error('Input is missing');\n        /* narrow type to make TS happy */\n        if (!(inputRef?.current instanceof HTMLInputElement))\n            throw new Error('Input is not an input element');\n        event.preventDefault();\n        setReactInputValue(inputRef.current, '');\n        inputRef.current.focus();\n        onClick?.(event);\n    };\n    return (jsx(Button, { ref: ref, variant: 'tertiary', type: 'reset', \"aria-label\": label, onClick: handleClear, icon: true, ...rest }));\n});\n// Copied from https://github.com/facebook/react/issues/11488#issuecomment-1300987446\nconst setReactInputValue = (input, value) => {\n    const nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value')?.set;\n    if (nativeInputValueSetter) {\n        nativeInputValueSetter.call(input, value);\n    }\n    else {\n        throw new Error('Unable to find the native input value setter');\n    }\n    const inputEvent = new Event('input', { bubbles: true });\n    const changeEvent = new Event('change', { bubbles: true });\n    input.dispatchEvent(inputEvent);\n    input.dispatchEvent(changeEvent);\n};\n\nexport { MultiSuggestionClear, setReactInputValue };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAC9C,SAASC,sBAAsB,QAAQ,sBAAsB;AAC7D,SAASC,MAAM,QAAQ,qBAAqB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAGJ,UAAU,CAAC,SAASI,oBAAoBA,CAAC;EAAE,YAAY,EAAEC,KAAK,GAAG,KAAK;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAC1H,MAAM;IAAEC;EAAS,CAAC,GAAGR,UAAU,CAACC,sBAAsB,CAAC,CAAC,CAAC;EACzD,MAAMQ,WAAW,GAAIC,KAAK,IAAK;IAC3B,IAAI,CAACF,QAAQ,EAAEG,OAAO,EAClB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IACvC;IACA,IAAI,EAAEJ,QAAQ,EAAEG,OAAO,YAAYE,gBAAgB,CAAC,EAChD,MAAM,IAAID,KAAK,CAAC,+BAA+B,CAAC;IACpDF,KAAK,CAACI,cAAc,CAAC,CAAC;IACtBC,kBAAkB,CAACP,QAAQ,CAACG,OAAO,EAAE,EAAE,CAAC;IACxCH,QAAQ,CAACG,OAAO,CAACK,KAAK,CAAC,CAAC;IACxBX,OAAO,GAAGK,KAAK,CAAC;EACpB,CAAC;EACD,OAAQZ,GAAG,CAACI,MAAM,EAAE;IAAEK,GAAG,EAAEA,GAAG;IAAEU,OAAO,EAAE,UAAU;IAAEC,IAAI,EAAE,OAAO;IAAE,YAAY,EAAEd,KAAK;IAAEC,OAAO,EAAEI,WAAW;IAAEU,IAAI,EAAE,IAAI;IAAE,GAAGb;EAAK,CAAC,CAAC;AACzI,CAAC,CAAC;AACF;AACA,MAAMS,kBAAkB,GAAGA,CAACK,KAAK,EAAEC,KAAK,KAAK;EACzC,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,wBAAwB,CAACC,MAAM,CAACZ,gBAAgB,CAACa,SAAS,EAAE,OAAO,CAAC,EAAEC,GAAG;EAC/G,IAAIL,sBAAsB,EAAE;IACxBA,sBAAsB,CAACM,IAAI,CAACR,KAAK,EAAEC,KAAK,CAAC;EAC7C,CAAC,MACI;IACD,MAAM,IAAIT,KAAK,CAAC,8CAA8C,CAAC;EACnE;EACA,MAAMiB,UAAU,GAAG,IAAIC,KAAK,CAAC,OAAO,EAAE;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC;EACxD,MAAMC,WAAW,GAAG,IAAIF,KAAK,CAAC,QAAQ,EAAE;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC;EAC1DX,KAAK,CAACa,aAAa,CAACJ,UAAU,CAAC;EAC/BT,KAAK,CAACa,aAAa,CAACD,WAAW,CAAC;AACpC,CAAC;AAED,SAAS7B,oBAAoB,EAAEY,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}