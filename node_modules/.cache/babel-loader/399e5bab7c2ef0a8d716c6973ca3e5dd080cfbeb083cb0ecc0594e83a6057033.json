{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { FloatingPortal, FloatingFocusManager } from '@floating-ui/react';\nimport { useVirtualizer } from '@tanstack/react-virtual';\nimport cl from 'clsx/lite';\nimport { forwardRef, useRef, useState, useEffect } from 'react';\nimport { useFormField } from './useFormField/useFormField.js';\nimport { ComboboxContext } from './ComboboxContext.js';\nimport { ComboboxIdProvider } from './ComboboxIdContext.js';\nimport { ComboboxCustom } from './Custom.js';\nimport ComboboxError from './internal/ComboboxError.js';\nimport ComboboxInput from './internal/ComboboxInput.js';\nimport ComboboxLabel from './internal/ComboboxLabel.js';\nimport ComboboxNative from './internal/ComboboxNative.js';\nimport { useCombobox } from './useCombobox.js';\nimport { useComboboxKeyboard } from './useComboboxKeyboard.js';\nimport { useFloatingCombobox } from './useFloatingCombobox.js';\nimport { prefix, setReactInputValue, removePrefix } from './utilities.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { useDebounceCallback } from '../../utilities/hooks/useDebounceCallback/useDebounceCallback.js';\nimport { omit } from '../../utilities/omit/omit.js';\n\n/**\n * @deprecated Use `Suggestion` instead\n */\nconst ComboboxComponent = forwardRef(({\n  value,\n  initialValue = [],\n  onValueChange,\n  label,\n  hideLabel = false,\n  description,\n  multiple = false,\n  disabled = false,\n  readOnly = false,\n  hideChips = false,\n  clearButtonLabel = 'Fjern alt',\n  hideClearButton = false,\n  error,\n  errorId,\n  id,\n  name,\n  portal = true,\n  htmlSize = 0,\n  virtual = false,\n  children,\n  style,\n  size = 'md',\n  loading,\n  loadingLabel = 'Laster...',\n  filter,\n  chipSrLabel = option => 'Slett ' + option.label,\n  className,\n  ...rest\n}, forwareddRef) => {\n  const inputRef = useRef(null);\n  const portalRef = useRef(null);\n  const listRef = useRef([]);\n  const [inputValue, setInputValue] = useState(rest.inputValue || '');\n  useEffect(() => {\n    if (typeof rest.inputValue === 'string') {\n      setInputValue(rest.inputValue);\n    }\n  }, [rest.inputValue]);\n  const {\n    selectedOptions,\n    options,\n    restChildren,\n    interactiveChildren,\n    customIds,\n    filteredOptionsChildren,\n    filteredOptions,\n    setSelectedOptions\n  } = useCombobox({\n    children,\n    inputValue,\n    filter,\n    multiple,\n    initialValue\n  });\n  const {\n    open,\n    setOpen,\n    refs,\n    floatingStyles,\n    context,\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  } = useFloatingCombobox({\n    listRef\n  });\n  const formFieldProps = useFormField({\n    disabled,\n    error,\n    errorId,\n    size,\n    description,\n    id\n  }, 'combobox');\n  // if value is set, set input value to the label of the value\n  useEffect(() => {\n    if (value && value.length > 0 && !multiple) {\n      const option = options[prefix(value[0])];\n      inputRef.current && setReactInputValue(inputRef.current, option?.label || '');\n    }\n  }, [multiple, value, options]);\n  useEffect(() => {\n    if (value && Object.keys(options).length >= 0) {\n      const updatedSelectedOptions = value.map(option => {\n        const value = options[prefix(option)];\n        return value;\n      });\n      setSelectedOptions(updatedSelectedOptions.reduce((acc, value) => {\n        acc[prefix(value.value)] = value;\n        return acc;\n      }, {}));\n    }\n  }, [multiple, value, options, setSelectedOptions]);\n  // handle click on option, either select or deselect - Handles single or multiple\n  const handleSelectOption = args => {\n    const {\n      option,\n      clear,\n      remove\n    } = args;\n    if (clear) {\n      setSelectedOptions({});\n      inputRef.current && setReactInputValue(inputRef.current, '');\n      onValueChange?.([]);\n      return;\n    }\n    if (!option) return;\n    if (remove) {\n      const newSelectedOptions = {\n        ...selectedOptions\n      };\n      delete newSelectedOptions[prefix(option.value)];\n      setSelectedOptions(newSelectedOptions);\n      onValueChange?.(Object.keys(newSelectedOptions).map(key => removePrefix(key)));\n      return;\n    }\n    const newSelectedOptions = {\n      ...selectedOptions\n    };\n    if (multiple) {\n      if (newSelectedOptions[prefix(option.value)]) {\n        delete newSelectedOptions[prefix(option.value)];\n      } else {\n        newSelectedOptions[prefix(option.value)] = option;\n      }\n      inputRef.current && setReactInputValue(inputRef.current, '');\n      inputRef.current?.focus();\n    } else {\n      /* clear newSelectedOptions */\n      for (const key of Object.keys(newSelectedOptions)) {\n        delete newSelectedOptions[key];\n      }\n      newSelectedOptions[prefix(option.value)] = option;\n      inputRef.current && setReactInputValue(inputRef.current, option?.label || '');\n      // move cursor to the end of the input\n      setTimeout(() => {\n        inputRef.current?.setSelectionRange(option?.label?.length || 0, option?.label?.length || 0);\n      }, 0);\n    }\n    setSelectedOptions(newSelectedOptions);\n    onValueChange?.(Object.keys(newSelectedOptions).map(key => removePrefix(key)));\n    !multiple && setOpen(false);\n    refs.domReference.current?.focus();\n  };\n  const debouncedHandleSelectOption = useDebounceCallback(handleSelectOption, 50);\n  const handleKeyDown = useComboboxKeyboard({\n    filteredOptions,\n    selectedOptions,\n    readOnly: formFieldProps.readOnly || false,\n    disabled: disabled,\n    multiple,\n    inputValue,\n    options,\n    open,\n    interactiveChildren,\n    setOpen,\n    handleSelectOption: debouncedHandleSelectOption\n  });\n  const rowVirtualizer = useVirtualizer({\n    count: Object.keys(filteredOptionsChildren).length,\n    getScrollElement: () => virtual ? refs.floating.current : null,\n    estimateSize: () => 70,\n    measureElement: elem => {\n      return elem.getBoundingClientRect().height;\n    },\n    overscan: 7\n  });\n  return jsxs(ComboboxContext.Provider, {\n    value: {\n      size,\n      options,\n      selectedOptions,\n      multiple,\n      disabled,\n      readOnly,\n      open,\n      inputRef,\n      refs,\n      inputValue,\n      formFieldProps,\n      htmlSize,\n      clearButtonLabel,\n      customIds,\n      filteredOptions,\n      setInputValue,\n      setOpen,\n      getReferenceProps,\n      getItemProps,\n      /* Recieves the value of the option, and searches for it in our values lookup */\n      onOptionClick: value => {\n        if (readOnly) return;\n        if (disabled) return;\n        const option = options[prefix(value)];\n        debouncedHandleSelectOption({\n          option: option\n        });\n      },\n      handleSelectOption: debouncedHandleSelectOption,\n      chipSrLabel,\n      listRef,\n      forwareddRef,\n      setListRef: (index, node) => {\n        listRef.current[index] = node;\n      }\n    },\n    children: [jsxs(\"div\", {\n      className: cl('ds-combobox', `ds-combobox--${size}`, disabled && 'ds-combobox__disabled', className),\n      style: style,\n      ref: portalRef,\n      children: [name && jsx(ComboboxNative, {\n        name: name,\n        selectedOptions: selectedOptions,\n        multiple: multiple\n      }), jsx(ComboboxLabel, {\n        label: label,\n        description: description,\n        size: size,\n        readOnly: readOnly,\n        hideLabel: hideLabel,\n        formFieldProps: formFieldProps\n      }), jsx(ComboboxInput, {\n        ...omit(['inputValue'], rest),\n        hideClearButton: hideClearButton,\n        listId: context.floatingId || '',\n        error: error,\n        hideChips: hideChips,\n        handleKeyDown: handleKeyDown,\n        \"aria-busy\": loading\n      }), jsx(ComboboxError, {\n        size: size,\n        error: error,\n        formFieldProps: formFieldProps\n      })]\n    }), open && jsx(FloatingPortal, {\n      root: portal ? null : portalRef,\n      children: jsx(FloatingFocusManager, {\n        context: context,\n        initialFocus: -1,\n        visuallyHiddenDismiss: true,\n        children: jsxs(\"div\", {\n          \"aria-labelledby\": formFieldProps.inputProps.id,\n          \"aria-autocomplete\": 'list',\n          tabIndex: -1,\n          ...getFloatingProps({\n            ref: refs.setFloating,\n            style: {\n              ...floatingStyles\n            }\n          }),\n          className: cl('ds-combobox__options-wrapper', `ds-combobox--${size}`),\n          children: [virtual && jsx(\"div\", {\n            style: {\n              height: `${rowVirtualizer.getTotalSize()}px`,\n              width: '100%',\n              position: 'relative'\n            },\n            children: rowVirtualizer.getVirtualItems().map(virtualRow => jsx(\"div\", {\n              ref: rowVirtualizer.measureElement,\n              \"data-index\": virtualRow.index,\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                transform: `translateY(${virtualRow.start}px)`\n              },\n              children: filteredOptionsChildren[virtualRow.index]\n            }, virtualRow.index))\n          }), loading ? jsxs(ComboboxCustom, {\n            className: 'ds-combobox__loading',\n            children: [jsx(Spinner, {\n              \"aria-label\": 'Laster',\n              \"data-size\": 'sm'\n            }), loadingLabel]\n          }) : jsxs(Fragment, {\n            children: [restChildren, !virtual && filteredOptionsChildren]\n          })]\n        })\n      })\n    })]\n  });\n});\nconst Combobox = forwardRef((props, ref) => jsx(ComboboxIdProvider, {\n  children: jsx(ComboboxComponent, {\n    ...props,\n    ref: ref\n  })\n}));\nCombobox.displayName = 'Combobox';\nexport { Combobox, ComboboxComponent };","map":{"version":3,"names":["jsx","jsxs","Fragment","FloatingPortal","FloatingFocusManager","useVirtualizer","cl","forwardRef","useRef","useState","useEffect","useFormField","ComboboxContext","ComboboxIdProvider","ComboboxCustom","ComboboxError","ComboboxInput","ComboboxLabel","ComboboxNative","useCombobox","useComboboxKeyboard","useFloatingCombobox","prefix","setReactInputValue","removePrefix","Spinner","useDebounceCallback","omit","ComboboxComponent","value","initialValue","onValueChange","label","hideLabel","description","multiple","disabled","readOnly","hideChips","clearButtonLabel","hideClearButton","error","errorId","id","name","portal","htmlSize","virtual","children","style","size","loading","loadingLabel","filter","chipSrLabel","option","className","rest","forwareddRef","inputRef","portalRef","listRef","inputValue","setInputValue","selectedOptions","options","restChildren","interactiveChildren","customIds","filteredOptionsChildren","filteredOptions","setSelectedOptions","open","setOpen","refs","floatingStyles","context","getReferenceProps","getFloatingProps","getItemProps","formFieldProps","length","current","Object","keys","updatedSelectedOptions","map","reduce","acc","handleSelectOption","args","clear","remove","newSelectedOptions","key","focus","setTimeout","setSelectionRange","domReference","debouncedHandleSelectOption","handleKeyDown","rowVirtualizer","count","getScrollElement","floating","estimateSize","measureElement","elem","getBoundingClientRect","height","overscan","Provider","onOptionClick","setListRef","index","node","ref","listId","floatingId","root","initialFocus","visuallyHiddenDismiss","inputProps","tabIndex","setFloating","getTotalSize","width","position","getVirtualItems","virtualRow","top","left","transform","start","Combobox","props","displayName"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Combobox/Combobox.js"],"sourcesContent":["'use client';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { FloatingPortal, FloatingFocusManager } from '@floating-ui/react';\nimport { useVirtualizer } from '@tanstack/react-virtual';\nimport cl from 'clsx/lite';\nimport { forwardRef, useRef, useState, useEffect } from 'react';\nimport { useFormField } from './useFormField/useFormField.js';\nimport { ComboboxContext } from './ComboboxContext.js';\nimport { ComboboxIdProvider } from './ComboboxIdContext.js';\nimport { ComboboxCustom } from './Custom.js';\nimport ComboboxError from './internal/ComboboxError.js';\nimport ComboboxInput from './internal/ComboboxInput.js';\nimport ComboboxLabel from './internal/ComboboxLabel.js';\nimport ComboboxNative from './internal/ComboboxNative.js';\nimport { useCombobox } from './useCombobox.js';\nimport { useComboboxKeyboard } from './useComboboxKeyboard.js';\nimport { useFloatingCombobox } from './useFloatingCombobox.js';\nimport { prefix, setReactInputValue, removePrefix } from './utilities.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { useDebounceCallback } from '../../utilities/hooks/useDebounceCallback/useDebounceCallback.js';\nimport { omit } from '../../utilities/omit/omit.js';\n\n/**\n * @deprecated Use `Suggestion` instead\n */\nconst ComboboxComponent = forwardRef(({ value, initialValue = [], onValueChange, label, hideLabel = false, description, multiple = false, disabled = false, readOnly = false, hideChips = false, clearButtonLabel = 'Fjern alt', hideClearButton = false, error, errorId, id, name, portal = true, htmlSize = 0, virtual = false, children, style, size = 'md', loading, loadingLabel = 'Laster...', filter, chipSrLabel = (option) => 'Slett ' + option.label, className, ...rest }, forwareddRef) => {\n    const inputRef = useRef(null);\n    const portalRef = useRef(null);\n    const listRef = useRef([]);\n    const [inputValue, setInputValue] = useState(rest.inputValue || '');\n    useEffect(() => {\n        if (typeof rest.inputValue === 'string') {\n            setInputValue(rest.inputValue);\n        }\n    }, [rest.inputValue]);\n    const { selectedOptions, options, restChildren, interactiveChildren, customIds, filteredOptionsChildren, filteredOptions, setSelectedOptions, } = useCombobox({\n        children,\n        inputValue,\n        filter,\n        multiple,\n        initialValue,\n    });\n    const { open, setOpen, refs, floatingStyles, context, getReferenceProps, getFloatingProps, getItemProps, } = useFloatingCombobox({\n        listRef,\n    });\n    const formFieldProps = useFormField({\n        disabled,\n        error,\n        errorId,\n        size,\n        description,\n        id,\n    }, 'combobox');\n    // if value is set, set input value to the label of the value\n    useEffect(() => {\n        if (value && value.length > 0 && !multiple) {\n            const option = options[prefix(value[0])];\n            inputRef.current &&\n                setReactInputValue(inputRef.current, option?.label || '');\n        }\n    }, [multiple, value, options]);\n    useEffect(() => {\n        if (value && Object.keys(options).length >= 0) {\n            const updatedSelectedOptions = value.map((option) => {\n                const value = options[prefix(option)];\n                return value;\n            });\n            setSelectedOptions(updatedSelectedOptions.reduce((acc, value) => {\n                acc[prefix(value.value)] = value;\n                return acc;\n            }, {}));\n        }\n    }, [multiple, value, options, setSelectedOptions]);\n    // handle click on option, either select or deselect - Handles single or multiple\n    const handleSelectOption = (args) => {\n        const { option, clear, remove } = args;\n        if (clear) {\n            setSelectedOptions({});\n            inputRef.current && setReactInputValue(inputRef.current, '');\n            onValueChange?.([]);\n            return;\n        }\n        if (!option)\n            return;\n        if (remove) {\n            const newSelectedOptions = { ...selectedOptions };\n            delete newSelectedOptions[prefix(option.value)];\n            setSelectedOptions(newSelectedOptions);\n            onValueChange?.(Object.keys(newSelectedOptions).map((key) => removePrefix(key)));\n            return;\n        }\n        const newSelectedOptions = { ...selectedOptions };\n        if (multiple) {\n            if (newSelectedOptions[prefix(option.value)]) {\n                delete newSelectedOptions[prefix(option.value)];\n            }\n            else {\n                newSelectedOptions[prefix(option.value)] = option;\n            }\n            inputRef.current && setReactInputValue(inputRef.current, '');\n            inputRef.current?.focus();\n        }\n        else {\n            /* clear newSelectedOptions */\n            for (const key of Object.keys(newSelectedOptions)) {\n                delete newSelectedOptions[key];\n            }\n            newSelectedOptions[prefix(option.value)] = option;\n            inputRef.current &&\n                setReactInputValue(inputRef.current, option?.label || '');\n            // move cursor to the end of the input\n            setTimeout(() => {\n                inputRef.current?.setSelectionRange(option?.label?.length || 0, option?.label?.length || 0);\n            }, 0);\n        }\n        setSelectedOptions(newSelectedOptions);\n        onValueChange?.(Object.keys(newSelectedOptions).map((key) => removePrefix(key)));\n        !multiple && setOpen(false);\n        refs.domReference.current?.focus();\n    };\n    const debouncedHandleSelectOption = useDebounceCallback(handleSelectOption, 50);\n    const handleKeyDown = useComboboxKeyboard({\n        filteredOptions,\n        selectedOptions,\n        readOnly: formFieldProps.readOnly || false,\n        disabled: disabled,\n        multiple,\n        inputValue,\n        options,\n        open,\n        interactiveChildren,\n        setOpen,\n        handleSelectOption: debouncedHandleSelectOption,\n    });\n    const rowVirtualizer = useVirtualizer({\n        count: Object.keys(filteredOptionsChildren).length,\n        getScrollElement: () => (virtual ? refs.floating.current : null),\n        estimateSize: () => 70,\n        measureElement: (elem) => {\n            return elem.getBoundingClientRect().height;\n        },\n        overscan: 7,\n    });\n    return (jsxs(ComboboxContext.Provider, { value: {\n            size,\n            options,\n            selectedOptions,\n            multiple,\n            disabled,\n            readOnly,\n            open,\n            inputRef,\n            refs,\n            inputValue,\n            formFieldProps,\n            htmlSize,\n            clearButtonLabel,\n            customIds,\n            filteredOptions,\n            setInputValue,\n            setOpen,\n            getReferenceProps,\n            getItemProps,\n            /* Recieves the value of the option, and searches for it in our values lookup */\n            onOptionClick: (value) => {\n                if (readOnly)\n                    return;\n                if (disabled)\n                    return;\n                const option = options[prefix(value)];\n                debouncedHandleSelectOption({ option: option });\n            },\n            handleSelectOption: debouncedHandleSelectOption,\n            chipSrLabel,\n            listRef,\n            forwareddRef,\n            setListRef: (index, node) => {\n                listRef.current[index] = node;\n            },\n        }, children: [jsxs(\"div\", { className: cl('ds-combobox', `ds-combobox--${size}`, disabled && 'ds-combobox__disabled', className), style: style, ref: portalRef, children: [name && (jsx(ComboboxNative, { name: name, selectedOptions: selectedOptions, multiple: multiple })), jsx(ComboboxLabel, { label: label, description: description, size: size, readOnly: readOnly, hideLabel: hideLabel, formFieldProps: formFieldProps }), jsx(ComboboxInput, { ...omit(['inputValue'], rest), hideClearButton: hideClearButton, listId: context.floatingId || '', error: error, hideChips: hideChips, handleKeyDown: handleKeyDown, \"aria-busy\": loading }), jsx(ComboboxError, { size: size, error: error, formFieldProps: formFieldProps })] }), open && (jsx(FloatingPortal, { root: portal ? null : portalRef, children: jsx(FloatingFocusManager, { context: context, initialFocus: -1, visuallyHiddenDismiss: true, children: jsxs(\"div\", { \"aria-labelledby\": formFieldProps.inputProps.id, \"aria-autocomplete\": 'list', tabIndex: -1, ...getFloatingProps({\n                            ref: refs.setFloating,\n                            style: {\n                                ...floatingStyles,\n                            },\n                        }), className: cl('ds-combobox__options-wrapper', `ds-combobox--${size}`), children: [virtual && (jsx(\"div\", { style: {\n                                    height: `${rowVirtualizer.getTotalSize()}px`,\n                                    width: '100%',\n                                    position: 'relative',\n                                }, children: rowVirtualizer.getVirtualItems().map((virtualRow) => (jsx(\"div\", { ref: rowVirtualizer.measureElement, \"data-index\": virtualRow.index, style: {\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                        width: '100%',\n                                        transform: `translateY(${virtualRow.start}px)`,\n                                    }, children: filteredOptionsChildren[virtualRow.index] }, virtualRow.index))) })), loading ? (jsxs(ComboboxCustom, { className: 'ds-combobox__loading', children: [jsx(Spinner, { \"aria-label\": 'Laster', \"data-size\": 'sm' }), loadingLabel] })) : (jsxs(Fragment, { children: [restChildren, !virtual && filteredOptionsChildren] }))] }) }) }))] }));\n});\nconst Combobox = forwardRef((props, ref) => (jsx(ComboboxIdProvider, { children: jsx(ComboboxComponent, { ...props, ref: ref }) })));\nCombobox.displayName = 'Combobox';\n\nexport { Combobox, ComboboxComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}