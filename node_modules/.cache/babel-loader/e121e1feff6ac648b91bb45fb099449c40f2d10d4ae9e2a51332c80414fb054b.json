{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport { forwardRef, useContext, version } from 'react';\nimport { Button } from '../Button/Button.js';\nimport { Context } from './PopoverTriggerContext.js';\n\n/**\n * PopoverTrigger component, used to trigger a popover.\n *\n * @example\n * <Popover.TriggerContext>\n *   <Popover.Trigger>Open Popover</Popover.Trigger>\n *   <Popover>\n *     Content\n *   </Popover>\n * </Popover.TriggerContext>\n *\n * @example inline\n * <Popover.TriggerContext>\n *   <Paragraph>\n *    We can use it <Popover.Trigger inline={true}>inline</Popover.Trigger>.\n *   </Paragraph>\n *   <Popover>\n *     Content\n *   </Popover>\n * </Popover.TriggerContext>\n */\nconst PopoverTrigger = forwardRef(function PopoverTrigger({\n  id,\n  inline,\n  asChild,\n  ...rest\n}, ref) {\n  const {\n    popoverId\n  } = useContext(Context);\n  const Component = asChild ? Slot : inline ? 'button' : Button;\n  const popoverProps = Object.assign({\n    [version.startsWith('19') ? 'popoverTarget' : 'popovertarget']: popoverId,\n    ...(inline ? {\n      'data-popover': 'inline'\n    } : {})\n  }, rest);\n  return jsx(Component, {\n    ref: ref,\n    ...popoverProps\n  });\n});\nexport { PopoverTrigger };","map":{"version":3,"names":["jsx","Slot","forwardRef","useContext","version","Button","Context","PopoverTrigger","id","inline","asChild","rest","ref","popoverId","Component","popoverProps","Object","assign","startsWith"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Popover/PopoverTrigger.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport { forwardRef, useContext, version } from 'react';\nimport { Button } from '../Button/Button.js';\nimport { Context } from './PopoverTriggerContext.js';\n\n/**\n * PopoverTrigger component, used to trigger a popover.\n *\n * @example\n * <Popover.TriggerContext>\n *   <Popover.Trigger>Open Popover</Popover.Trigger>\n *   <Popover>\n *     Content\n *   </Popover>\n * </Popover.TriggerContext>\n *\n * @example inline\n * <Popover.TriggerContext>\n *   <Paragraph>\n *    We can use it <Popover.Trigger inline={true}>inline</Popover.Trigger>.\n *   </Paragraph>\n *   <Popover>\n *     Content\n *   </Popover>\n * </Popover.TriggerContext>\n */\nconst PopoverTrigger = forwardRef(function PopoverTrigger({ id, inline, asChild, ...rest }, ref) {\n    const { popoverId } = useContext(Context);\n    const Component = asChild ? Slot : inline ? 'button' : Button;\n    const popoverProps = Object.assign({\n        [version.startsWith('19') ? 'popoverTarget' : 'popovertarget']: popoverId,\n        ...(inline\n            ? {\n                'data-popover': 'inline',\n            }\n            : {}),\n    }, rest);\n    return jsx(Component, { ref: ref, ...popoverProps });\n});\n\nexport { PopoverTrigger };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,UAAU,EAAEC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AACvD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,OAAO,QAAQ,4BAA4B;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGL,UAAU,CAAC,SAASK,cAAcA,CAAC;EAAEC,EAAE;EAAEC,MAAM;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAC7F,MAAM;IAAEC;EAAU,CAAC,GAAGV,UAAU,CAACG,OAAO,CAAC;EACzC,MAAMQ,SAAS,GAAGJ,OAAO,GAAGT,IAAI,GAAGQ,MAAM,GAAG,QAAQ,GAAGJ,MAAM;EAC7D,MAAMU,YAAY,GAAGC,MAAM,CAACC,MAAM,CAAC;IAC/B,CAACb,OAAO,CAACc,UAAU,CAAC,IAAI,CAAC,GAAG,eAAe,GAAG,eAAe,GAAGL,SAAS;IACzE,IAAIJ,MAAM,GACJ;MACE,cAAc,EAAE;IACpB,CAAC,GACC,CAAC,CAAC;EACZ,CAAC,EAAEE,IAAI,CAAC;EACR,OAAOX,GAAG,CAACc,SAAS,EAAE;IAAEF,GAAG,EAAEA,GAAG;IAAE,GAAGG;EAAa,CAAC,CAAC;AACxD,CAAC,CAAC;AAEF,SAASR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}