{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport cl from 'clsx/lite';\nimport { forwardRef, createContext, useState } from 'react';\nconst Context = createContext({});\n/**\n * Display a group of tabs that can be toggled between.\n *\n * @example\n * <Tabs onChange={(value) => console.log(value)}>\n *   <Tabs.List>\n *     <Tabs.Tab value='1'>Tab 1</Tabs.Tab>\n *     <Tabs.Tab value='2'>Tab 2</Tabs.Tab>\n *     <Tabs.Tab value='3'>Tab 3</Tabs.Tab>\n *   </Tabs.List>\n *   <Tabs.Panel value='1'>content 1</Tabs.Panel>\n *   <Tabs.Panel value='2'>content 2</Tabs.Panel>\n *   <Tabs.Panel value='3'>content 3</Tabs.Panel>\n * </Tabs>\n */\nconst Tabs = forwardRef(function Tabs({\n  value,\n  defaultValue,\n  className,\n  onChange,\n  ...rest\n}, ref) {\n  const isControlled = value !== undefined;\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue);\n  let onValueChange = onChange;\n  if (!isControlled) {\n    onValueChange = newValue => {\n      setUncontrolledValue(newValue);\n      onChange?.(newValue);\n    };\n    value = uncontrolledValue;\n  }\n  return jsx(Context.Provider, {\n    value: {\n      value,\n      defaultValue,\n      onChange: onValueChange\n    },\n    children: jsx(\"div\", {\n      className: cl('ds-tabs', className),\n      ref: ref,\n      ...rest\n    })\n  });\n});\nexport { Context, Tabs };","map":{"version":3,"names":["jsx","cl","forwardRef","createContext","useState","Context","Tabs","value","defaultValue","className","onChange","rest","ref","isControlled","undefined","uncontrolledValue","setUncontrolledValue","onValueChange","newValue","Provider","children"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Tabs/Tabs.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport cl from 'clsx/lite';\nimport { forwardRef, createContext, useState } from 'react';\n\nconst Context = createContext({});\n/**\n * Display a group of tabs that can be toggled between.\n *\n * @example\n * <Tabs onChange={(value) => console.log(value)}>\n *   <Tabs.List>\n *     <Tabs.Tab value='1'>Tab 1</Tabs.Tab>\n *     <Tabs.Tab value='2'>Tab 2</Tabs.Tab>\n *     <Tabs.Tab value='3'>Tab 3</Tabs.Tab>\n *   </Tabs.List>\n *   <Tabs.Panel value='1'>content 1</Tabs.Panel>\n *   <Tabs.Panel value='2'>content 2</Tabs.Panel>\n *   <Tabs.Panel value='3'>content 3</Tabs.Panel>\n * </Tabs>\n */\nconst Tabs = forwardRef(function Tabs({ value, defaultValue, className, onChange, ...rest }, ref) {\n    const isControlled = value !== undefined;\n    const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue);\n    let onValueChange = onChange;\n    if (!isControlled) {\n        onValueChange = (newValue) => {\n            setUncontrolledValue(newValue);\n            onChange?.(newValue);\n        };\n        value = uncontrolledValue;\n    }\n    return (jsx(Context.Provider, { value: {\n            value,\n            defaultValue,\n            onChange: onValueChange,\n        }, children: jsx(\"div\", { className: cl('ds-tabs', className), ref: ref, ...rest }) }));\n});\n\nexport { Context, Tabs };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,OAAOC,EAAE,MAAM,WAAW;AAC1B,SAASC,UAAU,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAE3D,MAAMC,OAAO,GAAGF,aAAa,CAAC,CAAC,CAAC,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,IAAI,GAAGJ,UAAU,CAAC,SAASI,IAAIA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC,SAAS;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAC9F,MAAMC,YAAY,GAAGN,KAAK,KAAKO,SAAS;EACxC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAACI,YAAY,CAAC;EACxE,IAAIS,aAAa,GAAGP,QAAQ;EAC5B,IAAI,CAACG,YAAY,EAAE;IACfI,aAAa,GAAIC,QAAQ,IAAK;MAC1BF,oBAAoB,CAACE,QAAQ,CAAC;MAC9BR,QAAQ,GAAGQ,QAAQ,CAAC;IACxB,CAAC;IACDX,KAAK,GAAGQ,iBAAiB;EAC7B;EACA,OAAQf,GAAG,CAACK,OAAO,CAACc,QAAQ,EAAE;IAAEZ,KAAK,EAAE;MAC/BA,KAAK;MACLC,YAAY;MACZE,QAAQ,EAAEO;IACd,CAAC;IAAEG,QAAQ,EAAEpB,GAAG,CAAC,KAAK,EAAE;MAAES,SAAS,EAAER,EAAE,CAAC,SAAS,EAAEQ,SAAS,CAAC;MAAEG,GAAG,EAAEA,GAAG;MAAE,GAAGD;IAAK,CAAC;EAAE,CAAC,CAAC;AAC9F,CAAC,CAAC;AAEF,SAASN,OAAO,EAAEC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}