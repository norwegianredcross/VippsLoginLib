{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment as Fragment$1, jsx } from 'react/jsx-runtime';\nimport { autoUpdate, computePosition, offset, flip, shift } from '@floating-ui/dom';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, useId, useState, useRef, useEffect, Fragment, version } from 'react';\nimport { useMergeRefs } from '@floating-ui/react';\n\n/**\n * Tooltip component that displays a small piece of information when hovering or focusing on an element.\n *\n * @example\n * <Tooltip content='This is a tooltip'>\n *  <button>Hover me</button>\n * </Tooltip>\n *\n * @example\n * <Tooltip content='This is a tooltip'>\n *  Hover me\n * </Tooltip>\n */\nconst Tooltip = forwardRef(function Tooltip({\n  id,\n  children,\n  content,\n  placement = 'top',\n  open,\n  className,\n  ...rest\n}, ref) {\n  const randomTooltipId = useId();\n  const [internalOpen, setInternalOpen] = useState(false);\n  const triggerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const mergedRefs = useMergeRefs([tooltipRef, ref]);\n  const controlledOpen = open ?? internalOpen;\n  const setOpen = () => {\n    setInternalOpen(true);\n  };\n  const setClose = () => {\n    setInternalOpen(false);\n  };\n  // Position with floating-ui\n  useEffect(() => {\n    const tooltip = tooltipRef.current;\n    const trigger = triggerRef.current;\n    tooltip?.togglePopover?.(controlledOpen);\n    if (tooltip) tooltip.style.opacity = controlledOpen ? '1' : '0';\n    if (tooltip && trigger && controlledOpen) {\n      return autoUpdate(trigger, tooltip, () => {\n        computePosition(trigger, tooltip, {\n          placement,\n          strategy: 'fixed',\n          middleware: [offset(data => {\n            // get pseudo element arrow size\n            const styles = getComputedStyle(data.elements.floating, '::before');\n            return parseFloat(styles.height);\n          }), flip({\n            fallbackAxisSideDirection: 'start'\n          }), shift(), arrowPseudoElement]\n        }).then(({\n          x,\n          y\n        }) => {\n          tooltip.style.translate = `${x}px ${y}px`;\n        });\n      });\n    }\n  }, [controlledOpen, placement]);\n  /* Add listener for ESC to dismiss */\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        setInternalOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  /* If children is only a string, make a span */\n  const ChildContainer = typeof children === 'string' ? 'span' : Slot;\n  /* Make sure it is valid */\n  if (typeof children !== 'string' && children.type === Fragment) {\n    console.error('<Tooltip> children needs to be a single ReactElement that can receive a ref and not: <Fragment/> | <></>');\n    return null;\n  }\n  const popoverProps = {\n    [version.startsWith('19') ? 'popoverTarget' : 'popovertarget']: id ?? randomTooltipId,\n    [version.startsWith('19') ? 'popoverTargetAction' : 'popovertargetaction']: 'show'\n  };\n  return jsxs(Fragment$1, {\n    children: [jsx(ChildContainer, {\n      ref: triggerRef,\n      ...popoverProps,\n      onMouseEnter: setOpen,\n      onMouseLeave: setClose,\n      onFocus: setOpen,\n      onBlur: setClose,\n      children: children\n    }), jsx(\"div\", {\n      ref: mergedRefs,\n      role: 'tooltip',\n      className: cl('ds-tooltip', className),\n      id: id ?? randomTooltipId,\n      // @ts-ignore @types/react-dom does not understand popover yet\n      popover: 'manual',\n      ...rest,\n      children: content\n    })]\n  });\n});\nconst arrowPseudoElement = {\n  name: 'ArrowPseudoElement',\n  fn(data) {\n    const {\n      elements,\n      rects,\n      placement\n    } = data;\n    let arrowX = `${Math.round(rects.reference.width / 2 + rects.reference.x - data.x)}px`;\n    let arrowY = `${Math.round(rects.reference.height / 2 + rects.reference.y - data.y)}px`;\n    switch (placement) {\n      case 'top':\n        arrowY = '100%';\n        break;\n      case 'right':\n        arrowX = '0';\n        break;\n      case 'bottom':\n        arrowY = '0';\n        break;\n      case 'left':\n        arrowX = '100%';\n        break;\n    }\n    elements.floating.style.setProperty('--dsc-tooltip-arrow-x', arrowX);\n    elements.floating.style.setProperty('--dsc-tooltip-arrow-y', arrowY);\n    return data;\n  }\n};\nexport { Tooltip };","map":{"version":3,"names":["jsxs","Fragment","Fragment$1","jsx","autoUpdate","computePosition","offset","flip","shift","Slot","cl","forwardRef","useId","useState","useRef","useEffect","version","useMergeRefs","Tooltip","id","children","content","placement","open","className","rest","ref","randomTooltipId","internalOpen","setInternalOpen","triggerRef","tooltipRef","mergedRefs","controlledOpen","setOpen","setClose","tooltip","current","trigger","togglePopover","style","opacity","strategy","middleware","data","styles","getComputedStyle","elements","floating","parseFloat","height","fallbackAxisSideDirection","arrowPseudoElement","then","x","y","translate","handleKeyDown","event","key","window","addEventListener","removeEventListener","ChildContainer","type","console","error","popoverProps","startsWith","onMouseEnter","onMouseLeave","onFocus","onBlur","role","popover","name","fn","rects","arrowX","Math","round","reference","width","arrowY","setProperty"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Tooltip/Tooltip.js"],"sourcesContent":["'use client';\nimport { jsxs, Fragment as Fragment$1, jsx } from 'react/jsx-runtime';\nimport { autoUpdate, computePosition, offset, flip, shift } from '@floating-ui/dom';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, useId, useState, useRef, useEffect, Fragment, version } from 'react';\nimport { useMergeRefs } from '@floating-ui/react';\n\n/**\n * Tooltip component that displays a small piece of information when hovering or focusing on an element.\n *\n * @example\n * <Tooltip content='This is a tooltip'>\n *  <button>Hover me</button>\n * </Tooltip>\n *\n * @example\n * <Tooltip content='This is a tooltip'>\n *  Hover me\n * </Tooltip>\n */\nconst Tooltip = forwardRef(function Tooltip({ id, children, content, placement = 'top', open, className, ...rest }, ref) {\n    const randomTooltipId = useId();\n    const [internalOpen, setInternalOpen] = useState(false);\n    const triggerRef = useRef(null);\n    const tooltipRef = useRef(null);\n    const mergedRefs = useMergeRefs([tooltipRef, ref]);\n    const controlledOpen = open ?? internalOpen;\n    const setOpen = () => {\n        setInternalOpen(true);\n    };\n    const setClose = () => {\n        setInternalOpen(false);\n    };\n    // Position with floating-ui\n    useEffect(() => {\n        const tooltip = tooltipRef.current;\n        const trigger = triggerRef.current;\n        tooltip?.togglePopover?.(controlledOpen);\n        if (tooltip)\n            tooltip.style.opacity = controlledOpen ? '1' : '0';\n        if (tooltip && trigger && controlledOpen) {\n            return autoUpdate(trigger, tooltip, () => {\n                computePosition(trigger, tooltip, {\n                    placement,\n                    strategy: 'fixed',\n                    middleware: [\n                        offset((data) => {\n                            // get pseudo element arrow size\n                            const styles = getComputedStyle(data.elements.floating, '::before');\n                            return parseFloat(styles.height);\n                        }),\n                        flip({\n                            fallbackAxisSideDirection: 'start',\n                        }),\n                        shift(),\n                        arrowPseudoElement,\n                    ],\n                }).then(({ x, y }) => {\n                    tooltip.style.translate = `${x}px ${y}px`;\n                });\n            });\n        }\n    }, [controlledOpen, placement]);\n    /* Add listener for ESC to dismiss */\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === 'Escape') {\n                setInternalOpen(false);\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, []);\n    /* If children is only a string, make a span */\n    const ChildContainer = typeof children === 'string' ? 'span' : Slot;\n    /* Make sure it is valid */\n    if (typeof children !== 'string' && children.type === Fragment) {\n        console.error('<Tooltip> children needs to be a single ReactElement that can receive a ref and not: <Fragment/> | <></>');\n        return null;\n    }\n    const popoverProps = {\n        [version.startsWith('19') ? 'popoverTarget' : 'popovertarget']: id ?? randomTooltipId,\n        [version.startsWith('19')\n            ? 'popoverTargetAction'\n            : 'popovertargetaction']: 'show',\n    };\n    return (jsxs(Fragment$1, { children: [jsx(ChildContainer, { ref: triggerRef, ...popoverProps, onMouseEnter: setOpen, onMouseLeave: setClose, onFocus: setOpen, onBlur: setClose, children: children }), jsx(\"div\", { ref: mergedRefs, role: 'tooltip', className: cl('ds-tooltip', className), id: id ?? randomTooltipId, \n                // @ts-ignore @types/react-dom does not understand popover yet\n                popover: 'manual', ...rest, children: content })] }));\n});\nconst arrowPseudoElement = {\n    name: 'ArrowPseudoElement',\n    fn(data) {\n        const { elements, rects, placement } = data;\n        let arrowX = `${Math.round(rects.reference.width / 2 + rects.reference.x - data.x)}px`;\n        let arrowY = `${Math.round(rects.reference.height / 2 + rects.reference.y - data.y)}px`;\n        switch (placement) {\n            case 'top':\n                arrowY = '100%';\n                break;\n            case 'right':\n                arrowX = '0';\n                break;\n            case 'bottom':\n                arrowY = '0';\n                break;\n            case 'left':\n                arrowX = '100%';\n                break;\n        }\n        elements.floating.style.setProperty('--dsc-tooltip-arrow-x', arrowX);\n        elements.floating.style.setProperty('--dsc-tooltip-arrow-y', arrowY);\n        return data;\n    },\n};\n\nexport { Tooltip };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}