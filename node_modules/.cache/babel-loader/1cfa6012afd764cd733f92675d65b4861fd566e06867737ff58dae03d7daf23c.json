{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport { forwardRef, useContext } from 'react';\nimport { Button } from '../Button/Button.js';\nimport { Context } from './DialogTriggerContext.js';\n\n/**\n * DialogTrigger component, used within a Dialog.TriggerContext to open a dialog.\n *\n * @example\n * <Dialog.TriggerContext>\n *   <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n *   <Dialog>\n *     Content\n *   </Dialog>\n * </Dialog.TriggerContext>\n */\nconst DialogTrigger = forwardRef(function DialogTrigger({\n  asChild,\n  ...rest\n}, ref) {\n  const contextRef = useContext(Context);\n  const Component = asChild ? Slot : Button;\n  const openDialog = () => {\n    /* check if element has `data-modal`, it it has, use `showModal` */\n    contextRef.current?.getAttribute('data-modal') === 'true' ? contextRef.current?.showModal() : contextRef.current?.show();\n  };\n  return jsx(Component, {\n    \"aria-haspopup\": 'dialog',\n    onClick: openDialog,\n    ref: ref,\n    ...rest\n  });\n});\nexport { DialogTrigger };","map":{"version":3,"names":["jsx","Slot","forwardRef","useContext","Button","Context","DialogTrigger","asChild","rest","ref","contextRef","Component","openDialog","current","getAttribute","showModal","show","onClick"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Dialog/DialogTrigger.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport { forwardRef, useContext } from 'react';\nimport { Button } from '../Button/Button.js';\nimport { Context } from './DialogTriggerContext.js';\n\n/**\n * DialogTrigger component, used within a Dialog.TriggerContext to open a dialog.\n *\n * @example\n * <Dialog.TriggerContext>\n *   <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n *   <Dialog>\n *     Content\n *   </Dialog>\n * </Dialog.TriggerContext>\n */\nconst DialogTrigger = forwardRef(function DialogTrigger({ asChild, ...rest }, ref) {\n    const contextRef = useContext(Context);\n    const Component = asChild ? Slot : Button;\n    const openDialog = () => {\n        /* check if element has `data-modal`, it it has, use `showModal` */\n        contextRef.current?.getAttribute('data-modal') === 'true'\n            ? contextRef.current?.showModal()\n            : contextRef.current?.show();\n    };\n    return (jsx(Component, { \"aria-haspopup\": 'dialog', onClick: openDialog, ref: ref, ...rest }));\n});\n\nexport { DialogTrigger };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAC9C,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,OAAO,QAAQ,2BAA2B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAGJ,UAAU,CAAC,SAASI,aAAaA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAC/E,MAAMC,UAAU,GAAGP,UAAU,CAACE,OAAO,CAAC;EACtC,MAAMM,SAAS,GAAGJ,OAAO,GAAGN,IAAI,GAAGG,MAAM;EACzC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrB;IACAF,UAAU,CAACG,OAAO,EAAEC,YAAY,CAAC,YAAY,CAAC,KAAK,MAAM,GACnDJ,UAAU,CAACG,OAAO,EAAEE,SAAS,CAAC,CAAC,GAC/BL,UAAU,CAACG,OAAO,EAAEG,IAAI,CAAC,CAAC;EACpC,CAAC;EACD,OAAQhB,GAAG,CAACW,SAAS,EAAE;IAAE,eAAe,EAAE,QAAQ;IAAEM,OAAO,EAAEL,UAAU;IAAEH,GAAG,EAAEA,GAAG;IAAE,GAAGD;EAAK,CAAC,CAAC;AACjG,CAAC,CAAC;AAEF,SAASF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}