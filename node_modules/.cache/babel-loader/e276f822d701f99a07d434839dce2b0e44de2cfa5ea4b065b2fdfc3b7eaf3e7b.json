{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@floating-ui/react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { forwardRef } from 'react';\nimport { useRovingFocus } from './useRovingFocus.js';\n\n/** Get the next focusable RovingFocusItem */\nfunction getNextFocusableValue(items, value) {\n  const currIndex = items.findIndex(item => item.value === value);\n  return items.at(currIndex === items.length - 1 ? 0 : currIndex + 1);\n}\n/** Get the previous focusable RovingFocusItem */\nfunction getPrevFocusableValue(items, value) {\n  const currIndex = items.findIndex(item => item.value === value);\n  return items.at(currIndex === 0 ? -1 : currIndex - 1);\n}\nconst RovingFocusItem = forwardRef(({\n  value,\n  asChild,\n  ...rest\n}, ref) => {\n  const Component = asChild ? Slot : 'div';\n  const focusValue = value ?? (typeof rest.children === 'string' ? rest.children : '');\n  const {\n    getOrderedItems,\n    getRovingProps,\n    orientation\n  } = useRovingFocus(focusValue);\n  const rovingProps = getRovingProps({\n    onKeyDown: e => {\n      rest?.onKeyDown?.(e);\n      const items = getOrderedItems();\n      let nextItem;\n      switch (orientation) {\n        case 'horizontal':\n          if (e.key === 'ArrowRight') {\n            nextItem = getNextFocusableValue(items, focusValue);\n          }\n          if (e.key === 'ArrowLeft') {\n            nextItem = getPrevFocusableValue(items, focusValue);\n          }\n          break;\n        case 'vertical':\n          if (e.key === 'ArrowDown') {\n            nextItem = getNextFocusableValue(items, focusValue);\n          }\n          if (e.key === 'ArrowUp') {\n            nextItem = getPrevFocusableValue(items, focusValue);\n          }\n          break;\n        case 'ambiguous':\n          if (['ArrowRight', 'ArrowDown'].includes(e.key)) {\n            nextItem = getNextFocusableValue(items, focusValue);\n          }\n          if (['ArrowLeft', 'ArrowUp'].includes(e.key)) {\n            nextItem = getPrevFocusableValue(items, focusValue);\n          }\n      }\n      if (e.key === 'Home') {\n        nextItem = items[0];\n      }\n      if (e.key === 'End') {\n        nextItem = items[items.length - 1];\n      }\n      if (nextItem) {\n        e.preventDefault();\n        nextItem.element.focus();\n      }\n    }\n  });\n  const mergedRefs = useMergeRefs([ref, rovingProps.ref]);\n  return jsx(Component, {\n    ...rest,\n    ...rovingProps,\n    ref: mergedRefs,\n    children: rest.children\n  });\n});\nexport { RovingFocusItem, getNextFocusableValue, getPrevFocusableValue };","map":{"version":3,"names":["jsx","useMergeRefs","Slot","forwardRef","useRovingFocus","getNextFocusableValue","items","value","currIndex","findIndex","item","at","length","getPrevFocusableValue","RovingFocusItem","asChild","rest","ref","Component","focusValue","children","getOrderedItems","getRovingProps","orientation","rovingProps","onKeyDown","e","nextItem","key","includes","preventDefault","element","focus","mergedRefs"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/utilities/RovingFocus/RovingFocusItem.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@floating-ui/react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { forwardRef } from 'react';\nimport { useRovingFocus } from './useRovingFocus.js';\n\n/** Get the next focusable RovingFocusItem */\nfunction getNextFocusableValue(items, value) {\n    const currIndex = items.findIndex((item) => item.value === value);\n    return items.at(currIndex === items.length - 1 ? 0 : currIndex + 1);\n}\n/** Get the previous focusable RovingFocusItem */\nfunction getPrevFocusableValue(items, value) {\n    const currIndex = items.findIndex((item) => item.value === value);\n    return items.at(currIndex === 0 ? -1 : currIndex - 1);\n}\nconst RovingFocusItem = forwardRef(({ value, asChild, ...rest }, ref) => {\n    const Component = asChild ? Slot : 'div';\n    const focusValue = value ?? (typeof rest.children === 'string' ? rest.children : '');\n    const { getOrderedItems, getRovingProps, orientation } = useRovingFocus(focusValue);\n    const rovingProps = getRovingProps({\n        onKeyDown: (e) => {\n            rest?.onKeyDown?.(e);\n            const items = getOrderedItems();\n            let nextItem;\n            switch (orientation) {\n                case 'horizontal':\n                    if (e.key === 'ArrowRight') {\n                        nextItem = getNextFocusableValue(items, focusValue);\n                    }\n                    if (e.key === 'ArrowLeft') {\n                        nextItem = getPrevFocusableValue(items, focusValue);\n                    }\n                    break;\n                case 'vertical':\n                    if (e.key === 'ArrowDown') {\n                        nextItem = getNextFocusableValue(items, focusValue);\n                    }\n                    if (e.key === 'ArrowUp') {\n                        nextItem = getPrevFocusableValue(items, focusValue);\n                    }\n                    break;\n                case 'ambiguous':\n                    if (['ArrowRight', 'ArrowDown'].includes(e.key)) {\n                        nextItem = getNextFocusableValue(items, focusValue);\n                    }\n                    if (['ArrowLeft', 'ArrowUp'].includes(e.key)) {\n                        nextItem = getPrevFocusableValue(items, focusValue);\n                    }\n            }\n            if (e.key === 'Home') {\n                nextItem = items[0];\n            }\n            if (e.key === 'End') {\n                nextItem = items[items.length - 1];\n            }\n            if (nextItem) {\n                e.preventDefault();\n                nextItem.element.focus();\n            }\n        },\n    });\n    const mergedRefs = useMergeRefs([ref, rovingProps.ref]);\n    return (jsx(Component, { ...rest, ...rovingProps, ref: mergedRefs, children: rest.children }));\n});\n\nexport { RovingFocusItem, getNextFocusableValue, getPrevFocusableValue };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}