{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, Fragment } from 'react';\n\n/**\n * Avatars are used to represent people or entities.\n *\n * @example\n * <Avatar aria-label=\"John Doe\" initials=\"JD\" />\n *\n * @example\n * <Avatar aria-label=\"John Doe\">\n *  <img src='…' alt='John Doe' />\n * </Avatar>\n *\n * @example\n * <Avatar aria-label=\"John Doe\">\n *  <Icon />\n * </Avatar>\n */\nconst Avatar = forwardRef(function Avatar({\n  'aria-label': ariaLabel,\n  variant = 'circle',\n  className,\n  children,\n  initials,\n  ...rest\n}, ref) {\n  const useSlot = children && typeof children !== 'string';\n  const Component = useSlot ? Slot : Fragment;\n  return jsx(\"span\", {\n    ref: ref,\n    className: cl('ds-avatar', className),\n    \"data-variant\": variant,\n    \"data-initials\": initials,\n    role: 'img',\n    \"aria-label\": ariaLabel,\n    ...rest,\n    children: jsx(Component, {\n      ...(useSlot ? {\n        'aria-hidden': true\n      } : {}),\n      children: children\n    })\n  });\n});\nexport { Avatar };","map":{"version":3,"names":["jsx","Slot","cl","forwardRef","Fragment","Avatar","ariaLabel","variant","className","children","initials","rest","ref","useSlot","Component","role"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Avatar/Avatar.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, Fragment } from 'react';\n\n/**\n * Avatars are used to represent people or entities.\n *\n * @example\n * <Avatar aria-label=\"John Doe\" initials=\"JD\" />\n *\n * @example\n * <Avatar aria-label=\"John Doe\">\n *  <img src='…' alt='John Doe' />\n * </Avatar>\n *\n * @example\n * <Avatar aria-label=\"John Doe\">\n *  <Icon />\n * </Avatar>\n */\nconst Avatar = forwardRef(function Avatar({ 'aria-label': ariaLabel, variant = 'circle', className, children, initials, ...rest }, ref) {\n    const useSlot = children && typeof children !== 'string';\n    const Component = useSlot ? Slot : Fragment;\n    return (jsx(\"span\", { ref: ref, className: cl('ds-avatar', className), \"data-variant\": variant, \"data-initials\": initials, role: 'img', \"aria-label\": ariaLabel, ...rest, children: jsx(Component, { ...(useSlot ? { 'aria-hidden': true } : {}), children: children }) }));\n});\n\nexport { Avatar };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAOC,EAAE,MAAM,WAAW;AAC1B,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGF,UAAU,CAAC,SAASE,MAAMA,CAAC;EAAE,YAAY,EAAEC,SAAS;EAAEC,OAAO,GAAG,QAAQ;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EACpI,MAAMC,OAAO,GAAGJ,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ;EACxD,MAAMK,SAAS,GAAGD,OAAO,GAAGZ,IAAI,GAAGG,QAAQ;EAC3C,OAAQJ,GAAG,CAAC,MAAM,EAAE;IAAEY,GAAG,EAAEA,GAAG;IAAEJ,SAAS,EAAEN,EAAE,CAAC,WAAW,EAAEM,SAAS,CAAC;IAAE,cAAc,EAAED,OAAO;IAAE,eAAe,EAAEG,QAAQ;IAAEK,IAAI,EAAE,KAAK;IAAE,YAAY,EAAET,SAAS;IAAE,GAAGK,IAAI;IAAEF,QAAQ,EAAET,GAAG,CAACc,SAAS,EAAE;MAAE,IAAID,OAAO,GAAG;QAAE,aAAa,EAAE;MAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MAAEJ,QAAQ,EAAEA;IAAS,CAAC;EAAE,CAAC,CAAC;AAC9Q,CAAC,CAAC;AAEF,SAASJ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}