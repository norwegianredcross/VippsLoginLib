{"ast":null,"code":"'use client';\n\nfunction fieldObserver(fieldElement) {\n  if (!fieldElement) return;\n  const elements = new Map();\n  const uuid = `:${Date.now().toString(36)}${Math.random().toString(36).slice(2, 5)}`;\n  let input = null;\n  let describedby = '';\n  const process = mutations => {\n    const changed = [];\n    const removed = [];\n    // Merge MutationRecords\n    for (const mutation of mutations) {\n      if (mutation.attributeName) changed.push(mutation.target ?? fieldElement);\n      changed.push(...(mutation.addedNodes || []));\n      removed.push(...(mutation.removedNodes || []));\n    }\n    // Register elements\n    for (const el of changed) {\n      if (!isElement(el)) continue;\n      if (isLabel(el)) elements.set(el, el.htmlFor);else if (el.hasAttribute('data-field')) elements.set(el, el.id);else if (isInputLike(el)) {\n        input = el;\n        describedby = el.getAttribute('aria-describedby') || '';\n      }\n    }\n    // Reset removed elements\n    for (const el of removed) {\n      if (!isElement(el)) continue;\n      if (input === el) input = null;\n      if (elements.has(el)) {\n        setAttr(el, 'aria-disabled', null); // Reset disabled state\n        setAttr(el, isLabel(el) ? 'for' : 'id', elements.get(el));\n        elements.delete(el);\n      }\n    }\n    // Connect elements\n    const describedbyIds = [describedby]; // Keep original aria-describedby\n    const inputId = input?.id || uuid;\n    const isDisabled = input?.hasAttribute('disabled') || input?.getAttribute('aria-disabled') === 'true';\n    for (const [el, value] of elements) {\n      const descriptionType = el.getAttribute('data-field');\n      const id = descriptionType ? `${inputId}:${descriptionType}` : inputId;\n      setAttr(el, 'aria-disabled', isDisabled ? 'true' : null); // Forward inputs disabled state to related elements to make axe tests happy\n      if (!value) setAttr(el, isLabel(el) ? 'for' : 'id', id); // Ensure we have a value\n      if (descriptionType === 'validation') describedbyIds.unshift(el.id); // Validations to the front\n      else if (descriptionType) describedbyIds.push(el.id); // Other descriptions to the back\n    }\n    setAttr(input, 'id', inputId);\n    setAttr(input, 'aria-describedby', describedbyIds.join(' ').trim());\n  };\n  const observer = createOptimizedMutationObserver(process);\n  observer.observe(fieldElement, {\n    attributeFilter: ['id', 'for', 'aria-describedby'],\n    attributes: true,\n    childList: true,\n    subtree: true\n  });\n  process([{\n    addedNodes: fieldElement.querySelectorAll('*')\n  }]); // Initial setup\n  observer.takeRecords(); // Clear initial setup queue\n  return () => observer.disconnect();\n}\n// Utilities\nconst isElement = node => node instanceof Element;\nconst isLabel = node => node instanceof HTMLLabelElement;\nconst isInputLike = node => node instanceof HTMLElement && 'validity' in node && !(node instanceof HTMLButtonElement); // Matches input, textarea, select and form accosiated custom elements\nconst setAttr = (el, name, value) => value ? el?.setAttribute(name, value) : el?.removeAttribute(name);\n// Speed up MutationObserver by debouncing, clearing internal queue after changes and only running when page is visible\nfunction createOptimizedMutationObserver(callback) {\n  const queue = [];\n  const observer = new MutationObserver(mutations => {\n    if (!queue.length) requestAnimationFrame(process);\n    queue.push(...mutations);\n  });\n  const process = () => {\n    callback(queue, observer);\n    queue.length = 0; // Reset queue\n    observer.takeRecords(); // Clear queue due to DOM changes in callback\n  };\n  return observer;\n}\nexport { fieldObserver, isElement, isInputLike, isLabel };","map":{"version":3,"names":["fieldObserver","fieldElement","elements","Map","uuid","Date","now","toString","Math","random","slice","input","describedby","process","mutations","changed","removed","mutation","attributeName","push","target","addedNodes","removedNodes","el","isElement","isLabel","set","htmlFor","hasAttribute","id","isInputLike","getAttribute","has","setAttr","get","delete","describedbyIds","inputId","isDisabled","value","descriptionType","unshift","join","trim","observer","createOptimizedMutationObserver","observe","attributeFilter","attributes","childList","subtree","querySelectorAll","takeRecords","disconnect","node","Element","HTMLLabelElement","HTMLElement","HTMLButtonElement","name","setAttribute","removeAttribute","callback","queue","MutationObserver","length","requestAnimationFrame"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Field/fieldObserver.js"],"sourcesContent":["'use client';\nfunction fieldObserver(fieldElement) {\n    if (!fieldElement)\n        return;\n    const elements = new Map();\n    const uuid = `:${Date.now().toString(36)}${Math.random().toString(36).slice(2, 5)}`;\n    let input = null;\n    let describedby = '';\n    const process = (mutations) => {\n        const changed = [];\n        const removed = [];\n        // Merge MutationRecords\n        for (const mutation of mutations) {\n            if (mutation.attributeName)\n                changed.push(mutation.target ?? fieldElement);\n            changed.push(...(mutation.addedNodes || []));\n            removed.push(...(mutation.removedNodes || []));\n        }\n        // Register elements\n        for (const el of changed) {\n            if (!isElement(el))\n                continue;\n            if (isLabel(el))\n                elements.set(el, el.htmlFor);\n            else if (el.hasAttribute('data-field'))\n                elements.set(el, el.id);\n            else if (isInputLike(el)) {\n                input = el;\n                describedby = el.getAttribute('aria-describedby') || '';\n            }\n        }\n        // Reset removed elements\n        for (const el of removed) {\n            if (!isElement(el))\n                continue;\n            if (input === el)\n                input = null;\n            if (elements.has(el)) {\n                setAttr(el, 'aria-disabled', null); // Reset disabled state\n                setAttr(el, isLabel(el) ? 'for' : 'id', elements.get(el));\n                elements.delete(el);\n            }\n        }\n        // Connect elements\n        const describedbyIds = [describedby]; // Keep original aria-describedby\n        const inputId = input?.id || uuid;\n        const isDisabled = input?.hasAttribute('disabled') ||\n            input?.getAttribute('aria-disabled') === 'true';\n        for (const [el, value] of elements) {\n            const descriptionType = el.getAttribute('data-field');\n            const id = descriptionType ? `${inputId}:${descriptionType}` : inputId;\n            setAttr(el, 'aria-disabled', isDisabled ? 'true' : null); // Forward inputs disabled state to related elements to make axe tests happy\n            if (!value)\n                setAttr(el, isLabel(el) ? 'for' : 'id', id); // Ensure we have a value\n            if (descriptionType === 'validation')\n                describedbyIds.unshift(el.id); // Validations to the front\n            else if (descriptionType)\n                describedbyIds.push(el.id); // Other descriptions to the back\n        }\n        setAttr(input, 'id', inputId);\n        setAttr(input, 'aria-describedby', describedbyIds.join(' ').trim());\n    };\n    const observer = createOptimizedMutationObserver(process);\n    observer.observe(fieldElement, {\n        attributeFilter: ['id', 'for', 'aria-describedby'],\n        attributes: true,\n        childList: true,\n        subtree: true,\n    });\n    process([{ addedNodes: fieldElement.querySelectorAll('*') }]); // Initial setup\n    observer.takeRecords(); // Clear initial setup queue\n    return () => observer.disconnect();\n}\n// Utilities\nconst isElement = (node) => node instanceof Element;\nconst isLabel = (node) => node instanceof HTMLLabelElement;\nconst isInputLike = (node) => node instanceof HTMLElement &&\n    'validity' in node &&\n    !(node instanceof HTMLButtonElement); // Matches input, textarea, select and form accosiated custom elements\nconst setAttr = (el, name, value) => value ? el?.setAttribute(name, value) : el?.removeAttribute(name);\n// Speed up MutationObserver by debouncing, clearing internal queue after changes and only running when page is visible\nfunction createOptimizedMutationObserver(callback) {\n    const queue = [];\n    const observer = new MutationObserver((mutations) => {\n        if (!queue.length)\n            requestAnimationFrame(process);\n        queue.push(...mutations);\n    });\n    const process = () => {\n        callback(queue, observer);\n        queue.length = 0; // Reset queue\n        observer.takeRecords(); // Clear queue due to DOM changes in callback\n    };\n    return observer;\n}\n\nexport { fieldObserver, isElement, isInputLike, isLabel };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}