{"ast":null,"code":"'use client';\n\nimport { isValidElement } from 'react';\nimport { ComboboxCustom } from './Custom.js';\nfunction isComboboxCustom(child) {\n  return isValidElement(child) && child.type === ComboboxCustom;\n}\nfunction isInteractiveComboboxCustom(child) {\n  return isComboboxCustom(child) && child.props.interactive === true;\n}\nconst INTERNAL_OPTION_PREFIX = 'internal-option-';\n/**\n * We use this function to prefix the value of the options so we can make sure numbers as strings are not parsed as numbers in objects\n * @param value\n * @returns\n */\nconst prefix = value => {\n  return INTERNAL_OPTION_PREFIX + value;\n};\nconst removePrefix = value => {\n  return value.slice(INTERNAL_OPTION_PREFIX.length);\n};\nconst setReactInputValue = (input, value) => {\n  const previousValue = input.value;\n  input.value = value;\n  const tracker = input._valueTracker;\n  if (typeof tracker !== 'undefined') {\n    tracker.setValue(previousValue);\n  }\n  //'change' instead of 'input', see https://github.com/facebook/react/issues/11488#issuecomment-381590324\n  input.dispatchEvent(new Event('change', {\n    bubbles: true\n  }));\n};\nexport { isComboboxCustom, isInteractiveComboboxCustom, prefix, removePrefix, setReactInputValue };","map":{"version":3,"names":["isValidElement","ComboboxCustom","isComboboxCustom","child","type","isInteractiveComboboxCustom","props","interactive","INTERNAL_OPTION_PREFIX","prefix","value","removePrefix","slice","length","setReactInputValue","input","previousValue","tracker","_valueTracker","setValue","dispatchEvent","Event","bubbles"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Combobox/utilities.js"],"sourcesContent":["'use client';\nimport { isValidElement } from 'react';\nimport { ComboboxCustom } from './Custom.js';\n\nfunction isComboboxCustom(child) {\n    return isValidElement(child) && child.type === ComboboxCustom;\n}\nfunction isInteractiveComboboxCustom(child) {\n    return isComboboxCustom(child) && child.props.interactive === true;\n}\nconst INTERNAL_OPTION_PREFIX = 'internal-option-';\n/**\n * We use this function to prefix the value of the options so we can make sure numbers as strings are not parsed as numbers in objects\n * @param value\n * @returns\n */\nconst prefix = (value) => {\n    return INTERNAL_OPTION_PREFIX + value;\n};\nconst removePrefix = (value) => {\n    return value.slice(INTERNAL_OPTION_PREFIX.length);\n};\nconst setReactInputValue = (input, value) => {\n    const previousValue = input.value;\n    input.value = value;\n    const tracker = input._valueTracker;\n    if (typeof tracker !== 'undefined') {\n        tracker.setValue(previousValue);\n    }\n    //'change' instead of 'input', see https://github.com/facebook/react/issues/11488#issuecomment-381590324\n    input.dispatchEvent(new Event('change', { bubbles: true }));\n};\n\nexport { isComboboxCustom, isInteractiveComboboxCustom, prefix, removePrefix, setReactInputValue };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,cAAc,QAAQ,OAAO;AACtC,SAASC,cAAc,QAAQ,aAAa;AAE5C,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC7B,OAAOH,cAAc,CAACG,KAAK,CAAC,IAAIA,KAAK,CAACC,IAAI,KAAKH,cAAc;AACjE;AACA,SAASI,2BAA2BA,CAACF,KAAK,EAAE;EACxC,OAAOD,gBAAgB,CAACC,KAAK,CAAC,IAAIA,KAAK,CAACG,KAAK,CAACC,WAAW,KAAK,IAAI;AACtE;AACA,MAAMC,sBAAsB,GAAG,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACtB,OAAOF,sBAAsB,GAAGE,KAAK;AACzC,CAAC;AACD,MAAMC,YAAY,GAAID,KAAK,IAAK;EAC5B,OAAOA,KAAK,CAACE,KAAK,CAACJ,sBAAsB,CAACK,MAAM,CAAC;AACrD,CAAC;AACD,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEL,KAAK,KAAK;EACzC,MAAMM,aAAa,GAAGD,KAAK,CAACL,KAAK;EACjCK,KAAK,CAACL,KAAK,GAAGA,KAAK;EACnB,MAAMO,OAAO,GAAGF,KAAK,CAACG,aAAa;EACnC,IAAI,OAAOD,OAAO,KAAK,WAAW,EAAE;IAChCA,OAAO,CAACE,QAAQ,CAACH,aAAa,CAAC;EACnC;EACA;EACAD,KAAK,CAACK,aAAa,CAAC,IAAIC,KAAK,CAAC,QAAQ,EAAE;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC,CAAC;AAC/D,CAAC;AAED,SAASpB,gBAAgB,EAAEG,2BAA2B,EAAEI,MAAM,EAAEE,YAAY,EAAEG,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}