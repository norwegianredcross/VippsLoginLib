{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@floating-ui/react';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef } from 'react';\nimport { useSynchronizedAnimation } from '../../utilities/hooks/useSynchronizedAnimation/useSynchronizedAnimation.js';\n\n/**\n * Skeleton is used to represent a draft of page while the content loads.\n *\n * @example\n * <Skeleton variant=\"circle\" />\n * <Skeleton variant=\"text\" />\n * <Skeleton variant=\"rectangle\" />\n */\nconst Skeleton = forwardRef(function Skeleton({\n  asChild,\n  className,\n  height,\n  style,\n  variant = 'rectangle',\n  width,\n  ...rest\n}, ref) {\n  const Component = asChild ? Slot : 'span';\n  const isText = variant === 'text';\n  const animationRef = useSynchronizedAnimation('ds-skeleton-opacity-fade');\n  const mergedRefs = useMergeRefs([animationRef, ref]);\n  return jsx(Component, {\n    \"aria-hidden\": 'true',\n    className: cl('ds-skeleton', className),\n    \"data-text\": isText ? '-'.repeat(Number(width) || 1) : undefined,\n    \"data-variant\": variant,\n    ref: mergedRefs,\n    style: isText ? style : {\n      width,\n      height,\n      ...style\n    },\n    ...rest\n  });\n});\nexport { Skeleton };","map":{"version":3,"names":["jsx","useMergeRefs","Slot","cl","forwardRef","useSynchronizedAnimation","Skeleton","asChild","className","height","style","variant","width","rest","ref","Component","isText","animationRef","mergedRefs","repeat","Number","undefined"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Skeleton/Skeleton.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@floating-ui/react';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef } from 'react';\nimport { useSynchronizedAnimation } from '../../utilities/hooks/useSynchronizedAnimation/useSynchronizedAnimation.js';\n\n/**\n * Skeleton is used to represent a draft of page while the content loads.\n *\n * @example\n * <Skeleton variant=\"circle\" />\n * <Skeleton variant=\"text\" />\n * <Skeleton variant=\"rectangle\" />\n */\nconst Skeleton = forwardRef(function Skeleton({ asChild, className, height, style, variant = 'rectangle', width, ...rest }, ref) {\n    const Component = asChild ? Slot : 'span';\n    const isText = variant === 'text';\n    const animationRef = useSynchronizedAnimation('ds-skeleton-opacity-fade');\n    const mergedRefs = useMergeRefs([animationRef, ref]);\n    return (jsx(Component, { \"aria-hidden\": 'true', className: cl('ds-skeleton', className), \"data-text\": isText ? '-'.repeat(Number(width) || 1) : undefined, \"data-variant\": variant, ref: mergedRefs, style: isText ? style : { width, height, ...style }, ...rest }));\n});\n\nexport { Skeleton };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAOC,EAAE,MAAM,WAAW;AAC1B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,wBAAwB,QAAQ,4EAA4E;;AAErH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAGF,UAAU,CAAC,SAASE,QAAQA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC,MAAM;EAAEC,KAAK;EAAEC,OAAO,GAAG,WAAW;EAAEC,KAAK;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAC7H,MAAMC,SAAS,GAAGR,OAAO,GAAGL,IAAI,GAAG,MAAM;EACzC,MAAMc,MAAM,GAAGL,OAAO,KAAK,MAAM;EACjC,MAAMM,YAAY,GAAGZ,wBAAwB,CAAC,0BAA0B,CAAC;EACzE,MAAMa,UAAU,GAAGjB,YAAY,CAAC,CAACgB,YAAY,EAAEH,GAAG,CAAC,CAAC;EACpD,OAAQd,GAAG,CAACe,SAAS,EAAE;IAAE,aAAa,EAAE,MAAM;IAAEP,SAAS,EAAEL,EAAE,CAAC,aAAa,EAAEK,SAAS,CAAC;IAAE,WAAW,EAAEQ,MAAM,GAAG,GAAG,CAACG,MAAM,CAACC,MAAM,CAACR,KAAK,CAAC,IAAI,CAAC,CAAC,GAAGS,SAAS;IAAE,cAAc,EAAEV,OAAO;IAAEG,GAAG,EAAEI,UAAU;IAAER,KAAK,EAAEM,MAAM,GAAGN,KAAK,GAAG;MAAEE,KAAK;MAAEH,MAAM;MAAE,GAAGC;IAAM,CAAC;IAAE,GAAGG;EAAK,CAAC,CAAC;AACxQ,CAAC,CAAC;AAEF,SAASP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}