{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@floating-ui/react';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, useContext, useRef, useEffect } from 'react';\nimport { Context } from './DialogTriggerContext.js';\nimport { Button } from '../Button/Button.js';\n\n/**\n * Dialog component, used to display a dialog dialog.\n *\n * @example with TriggerContext\n * <Dialog.TriggerContext>\n *   <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n *   <Dialog>\n *     <Dialog.Block>\n *       Content\n *     </Dialog.Block>\n *   </Dialog>\n * </Dialog.TriggerContext>\n *\n * @example without TriggerContext\n * const dialogRef = useRef<HTMLDialogElement>(null);\n *\n * ...\n *\n * <Button onClick={() => dialogRef.current?.showModal()}>Open Dialog</Button>\n * <Dialog ref={dialogRef}>\n *   Content\n * </Dialog>\n */\nconst Dialog = forwardRef(function Dialog({\n  asChild,\n  children,\n  className,\n  closeButton = 'Lukk dialogvindu',\n  closedby = 'closerequest',\n  modal = true,\n  onClose,\n  open,\n  ...rest\n}, ref) {\n  const contextRef = useContext(Context);\n  const dialogRef = useRef(null); // This local ref is used to make sure the dialog works without a DialogTriggerContext\n  const Component = asChild ? Slot : 'dialog';\n  const mergedRefs = useMergeRefs([contextRef, ref, dialogRef]);\n  const showProp = modal ? 'showModal' : 'show';\n  useEffect(() => dialogRef.current?.[open ? showProp : 'close'](), [open]); // Toggle open based on prop\n  useEffect(() => {\n    const dialog = dialogRef.current;\n    const handleClosedby = event => {\n      const {\n        clientY: y,\n        clientX: x,\n        target\n      } = event;\n      if (event instanceof KeyboardEvent) return closedby === 'none' && event.key === 'Escape' && event.preventDefault(); // Skip ESC-key if closedby=\"none\"\n      if (window.getSelection()?.toString()) return; // Fix bug where if you select text spanning two divs it thinks you clicked outside\n      if (dialog && target === dialog && closedby === 'any') {\n        const {\n          top,\n          left,\n          right,\n          bottom\n        } = dialog.getBoundingClientRect();\n        const isInDialog = top <= y && y <= bottom && left <= x && x <= right;\n        if (!isInDialog) dialog?.close(); // Both <dialog> and ::backdrop is considered same event.target\n      }\n    };\n    const handleAutoFocus = () => {\n      const autofocus = dialog?.querySelector('[autofocus]');\n      if (document.activeElement !== autofocus) autofocus?.focus();\n    };\n    dialog?.addEventListener('animationend', handleAutoFocus);\n    dialog?.addEventListener('click', handleClosedby);\n    dialog?.addEventListener('keydown', handleClosedby);\n    return () => {\n      dialog?.removeEventListener('animationend', handleAutoFocus);\n      dialog?.removeEventListener('click', handleClosedby);\n      dialog?.removeEventListener('keydown', handleClosedby);\n    };\n  }, [closedby]);\n  /* handle closing */\n  useEffect(() => {\n    const handleClose = event => onClose?.(event);\n    dialogRef.current?.addEventListener('close', handleClose);\n    return () => dialogRef.current?.removeEventListener('close', handleClose);\n  }, [onClose]);\n  return jsxs(Component, {\n    className: cl('ds-dialog', className),\n    ref: mergedRefs,\n    \"data-modal\": modal,\n    ...rest,\n    children: [closeButton !== false && jsx(\"form\", {\n      method: 'dialog',\n      children: jsx(Button, {\n        \"aria-label\": closeButton,\n        autoFocus: true,\n        \"data-color\": 'neutral',\n        icon: true,\n        name: 'close',\n        type: 'submit',\n        variant: 'tertiary'\n      })\n    }), children]\n  });\n});\nexport { Dialog };","map":{"version":3,"names":["jsxs","jsx","useMergeRefs","Slot","cl","forwardRef","useContext","useRef","useEffect","Context","Button","Dialog","asChild","children","className","closeButton","closedby","modal","onClose","open","rest","ref","contextRef","dialogRef","Component","mergedRefs","showProp","current","dialog","handleClosedby","event","clientY","y","clientX","x","target","KeyboardEvent","key","preventDefault","window","getSelection","toString","top","left","right","bottom","getBoundingClientRect","isInDialog","close","handleAutoFocus","autofocus","querySelector","document","activeElement","focus","addEventListener","removeEventListener","handleClose","method","autoFocus","icon","name","type","variant"],"sources":["/Users/riccardomarini/Dropbox/Lavori/RedCross/Login Vipps/LoginVippsLib/node_modules/@digdir/designsystemet-react/dist/esm/components/Dialog/Dialog.js"],"sourcesContent":["'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@floating-ui/react';\nimport { Slot } from '@radix-ui/react-slot';\nimport cl from 'clsx/lite';\nimport { forwardRef, useContext, useRef, useEffect } from 'react';\nimport { Context } from './DialogTriggerContext.js';\nimport { Button } from '../Button/Button.js';\n\n/**\n * Dialog component, used to display a dialog dialog.\n *\n * @example with TriggerContext\n * <Dialog.TriggerContext>\n *   <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n *   <Dialog>\n *     <Dialog.Block>\n *       Content\n *     </Dialog.Block>\n *   </Dialog>\n * </Dialog.TriggerContext>\n *\n * @example without TriggerContext\n * const dialogRef = useRef<HTMLDialogElement>(null);\n *\n * ...\n *\n * <Button onClick={() => dialogRef.current?.showModal()}>Open Dialog</Button>\n * <Dialog ref={dialogRef}>\n *   Content\n * </Dialog>\n */\nconst Dialog = forwardRef(function Dialog({ asChild, children, className, closeButton = 'Lukk dialogvindu', closedby = 'closerequest', modal = true, onClose, open, ...rest }, ref) {\n    const contextRef = useContext(Context);\n    const dialogRef = useRef(null); // This local ref is used to make sure the dialog works without a DialogTriggerContext\n    const Component = asChild ? Slot : 'dialog';\n    const mergedRefs = useMergeRefs([contextRef, ref, dialogRef]);\n    const showProp = modal ? 'showModal' : 'show';\n    useEffect(() => dialogRef.current?.[open ? showProp : 'close'](), [open]); // Toggle open based on prop\n    useEffect(() => {\n        const dialog = dialogRef.current;\n        const handleClosedby = (event) => {\n            const { clientY: y, clientX: x, target } = event;\n            if (event instanceof KeyboardEvent)\n                return (closedby === 'none' &&\n                    event.key === 'Escape' &&\n                    event.preventDefault()); // Skip ESC-key if closedby=\"none\"\n            if (window.getSelection()?.toString())\n                return; // Fix bug where if you select text spanning two divs it thinks you clicked outside\n            if (dialog && target === dialog && closedby === 'any') {\n                const { top, left, right, bottom } = dialog.getBoundingClientRect();\n                const isInDialog = top <= y && y <= bottom && left <= x && x <= right;\n                if (!isInDialog)\n                    dialog?.close(); // Both <dialog> and ::backdrop is considered same event.target\n            }\n        };\n        const handleAutoFocus = () => {\n            const autofocus = dialog?.querySelector('[autofocus]');\n            if (document.activeElement !== autofocus)\n                autofocus?.focus();\n        };\n        dialog?.addEventListener('animationend', handleAutoFocus);\n        dialog?.addEventListener('click', handleClosedby);\n        dialog?.addEventListener('keydown', handleClosedby);\n        return () => {\n            dialog?.removeEventListener('animationend', handleAutoFocus);\n            dialog?.removeEventListener('click', handleClosedby);\n            dialog?.removeEventListener('keydown', handleClosedby);\n        };\n    }, [closedby]);\n    /* handle closing */\n    useEffect(() => {\n        const handleClose = (event) => onClose?.(event);\n        dialogRef.current?.addEventListener('close', handleClose);\n        return () => dialogRef.current?.removeEventListener('close', handleClose);\n    }, [onClose]);\n    return (jsxs(Component, { className: cl('ds-dialog', className), ref: mergedRefs, \"data-modal\": modal, ...rest, children: [closeButton !== false && (jsx(\"form\", { method: 'dialog', children: jsx(Button, { \"aria-label\": closeButton, autoFocus: true, \"data-color\": 'neutral', icon: true, name: 'close', type: 'submit', variant: 'tertiary' }) })), children] }));\n});\n\nexport { Dialog };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}